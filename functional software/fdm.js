/* Generated by the Nim Compiler v2.0.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI738197563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420307 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI738197508 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI738197507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI738197514 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420313 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420716 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420561 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI687865901 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420373 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420297 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI721420298 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420293 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI721420296 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420291 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI721420292 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865893 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI687866036 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI687865948 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI687865937 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI687865868 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI687865869 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI855638085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217736.base = NTI33555179;
var NNI855638085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI855638085.node = NNI855638085;
var NNI687865868 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI687865868, name: "text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI687865868, name: "id", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI687865868, name: "function_call", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI687865868, name: "equals", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI687865868, name: "variable", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI687865868, name: "paren", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI687865868, name: "comma", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI687865868, name: "curly", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI687865868, name: "bracket", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI687865868, name: "semi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI687865868, name: "tilda", len: 0, sons: null}}};
NTI687865868.node = NNI687865868;
var NNI687865869 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI687865868, name: "kind", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554449, name: "value", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554449, name: "pos", sons: null}]};
NTI687865869.node = NNI687865869;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
NTI687865937.base = NTI687865869;
NTI687865948.base = NTI687865869;
NTI687866036.base = NTI687865869;
NTI687865893.base = NTI687865869;
var NNI721420291 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI721420291, name: "function", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI721420291, name: "text", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI721420291, name: "function_call", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI721420291, name: "generic", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI721420291, name: "variable", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI721420291, name: "variable_decleration", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI721420291, name: "array_access", len: 0, sons: null}}};
NTI721420291.node = NNI721420291;
NTI721420295.base = NTI721420292;
NTI721420298.base = NTI721420292;
var NNI721420293 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI721420298, name: "content", sons: null}, 
{kind: 1, offset: "is_approx", len: 0, typ: NTI33554466, name: "is_approx", sons: null}]};
NTI721420293.node = NNI721420293;
NTI721420296.base = NTI721420293;
NTI721420297.base = NTI721420292;
var NNI721420292 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI721420291, name: "kind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554449, name: "value", sons: null}, 
{kind: 1, offset: "subvalues", len: 0, typ: NTI721420295, name: "subvalues", sons: null}, 
{kind: 1, offset: "fnvars", len: 0, typ: NTI721420296, name: "fnvars", sons: null}, 
{kind: 1, offset: "fncontents", len: 0, typ: NTI721420297, name: "fncontents", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554449, name: "pos", sons: null}, 
{kind: 1, offset: "is_approx", len: 0, typ: NTI33554466, name: "is_approx", sons: null}]};
NTI721420292.node = NNI721420292;
NTI721420373.base = NTI721420292;
NTI687865901.base = NTI687865869;
NTI721420561.base = NTI721420293;
NTI721420716.base = NTI721420293;
NTI721420313.base = NTI721420292;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
NTI134217746.base = NTI33555179;
NTI738197508.base = NTI721420292;
var NNI738197507 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554449, name: "content", sons: null}, 
{kind: 1, offset: "approx_content", len: 0, typ: NTI738197508, name: "approx_content", sons: null}]};
NTI738197507.node = NNI738197507;
NTI738197514.base = NTI738197507;
NTI721420307.base = NTI721420292;
NTI738197563.base = NTI721420292;

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
    var FormatOpen_536871329 = ["rb", "wb", "w+b", "r+b", "ab"];

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet2 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet3 = setConstr([97, 122], [65, 90], [48, 57], 95);

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function nimCharToStr(x_33556441) {
  var result_33556442 = [];

    result_33556442 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556442[0] = x_33556441;

  return result_33556442;

}
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
var files_completed_687865866 = [[]];
if (globalThis.utcInstance_704644728 === undefined) {
  globalThis.utcInstance_704644728 = [null];
}
if (globalThis.localInstance_704644729 === undefined) {
  globalThis.localInstance_704644729 = [null];
}
var functions_721420320 = [[]];

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_553648175 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_553648175 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_553648175;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_553648175 = addInt(i_553648175, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function quit_33557787(errorcode_33557788) {
    exit(((errorcode_33557788) | 0));

  
}

function fatal_754974722(text_754974723) {
    rawEcho(([69,82,82,79,82,58] || []).concat(text_754974723 || []));
    quit_33557787(1);

  
}

function validateUtf8_1107296592(s_1107296593) {
  var result_1107296594 = 0;

  BeforeRet: {
    var i_1107296595 = 0;
    var L_1107296599 = (s_1107296593).length;
    Label1: {
        Label2: while (true) {
        if (!(i_1107296595 < L_1107296599)) break Label2;
          if ((s_1107296593[chckIndx(i_1107296595, 0, (s_1107296593).length - 1)] <= 127)) {
          i_1107296595 = addInt(i_1107296595, 1);
          }
          else {
          if (((s_1107296593[chckIndx(i_1107296595, 0, (s_1107296593).length - 1)] >>> 5) == 6)) {
          if ((s_1107296593[chckIndx(i_1107296595, 0, (s_1107296593).length - 1)] < 194)) {
          result_1107296594 = i_1107296595;
          break BeforeRet;
          }
          
          if (((addInt(i_1107296595, 1) < L_1107296599) && ((s_1107296593[chckIndx(addInt(i_1107296595, 1), 0, (s_1107296593).length - 1)] >>> 6) == 2))) {
          i_1107296595 = addInt(i_1107296595, 2);
          }
          else {
            result_1107296594 = i_1107296595;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1107296593[chckIndx(i_1107296595, 0, (s_1107296593).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_1107296595, 2) < L_1107296599) && ((s_1107296593[chckIndx(addInt(i_1107296595, 1), 0, (s_1107296593).length - 1)] >>> 6) == 2)) && ((s_1107296593[chckIndx(addInt(i_1107296595, 2), 0, (s_1107296593).length - 1)] >>> 6) == 2))) {
          i_1107296595 = addInt(i_1107296595, 3);
          }
          else {
            result_1107296594 = i_1107296595;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1107296593[chckIndx(i_1107296595, 0, (s_1107296593).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_1107296595, 3) < L_1107296599) && ((s_1107296593[chckIndx(addInt(i_1107296595, 1), 0, (s_1107296593).length - 1)] >>> 6) == 2)) && ((s_1107296593[chckIndx(addInt(i_1107296595, 2), 0, (s_1107296593).length - 1)] >>> 6) == 2)) && ((s_1107296593[chckIndx(addInt(i_1107296595, 3), 0, (s_1107296593).length - 1)] >>> 6) == 2))) {
          i_1107296595 = addInt(i_1107296595, 4);
          }
          else {
            result_1107296594 = i_1107296595;
            break BeforeRet;
          }
          
          }
          else {
            result_1107296594 = i_1107296595;
            break BeforeRet;
          }
          }}}
        }
    };
    result_1107296594 = (-1);
    break BeforeRet;
  };

  return result_1107296594;

}

function validateUtf8_1107303617(s_1107303618) {
  var result_1107303619 = 0;

    result_1107303619 = validateUtf8_1107296592((s_1107303618.slice(0, (s_1107303618).length - 1 + 1)));

  return result_1107303619;

}

function nucruneLen(s_1107296284) {
  var result_1107296285 = 0;

    result_1107296285 = 0;
    var i_1107296286 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1107296286 < (s_1107296284).length)) break Label2;
          if ((s_1107296284[chckIndx(i_1107296286, 0, (s_1107296284).length - 1)] <= 127)) {
          i_1107296286 = addInt(i_1107296286, 1);
          }
          else {
          if (((s_1107296284[chckIndx(i_1107296286, 0, (s_1107296284).length - 1)] >>> 5) == 6)) {
          i_1107296286 = addInt(i_1107296286, 2);
          }
          else {
          if (((s_1107296284[chckIndx(i_1107296286, 0, (s_1107296284).length - 1)] >>> 4) == 14)) {
          i_1107296286 = addInt(i_1107296286, 3);
          }
          else {
          if (((s_1107296284[chckIndx(i_1107296286, 0, (s_1107296284).length - 1)] >>> 3) == 30)) {
          i_1107296286 = addInt(i_1107296286, 4);
          }
          else {
          if (((s_1107296284[chckIndx(i_1107296286, 0, (s_1107296284).length - 1)] >>> 2) == 62)) {
          i_1107296286 = addInt(i_1107296286, 5);
          }
          else {
          if (((s_1107296284[chckIndx(i_1107296286, 0, (s_1107296284).length - 1)] >>> 1) == 126)) {
          i_1107296286 = addInt(i_1107296286, 6);
          }
          else {
          i_1107296286 = addInt(i_1107296286, 1);
          }
          }}}}}
          result_1107296285 = addInt(result_1107296285, 1);
        }
    };

  return result_1107296285;

}

function runeLen_1107303445(s_1107303446) {
  var result_1107303447 = 0;

    result_1107303447 = nucruneLen((s_1107303446.slice(0, (s_1107303446).length - 1 + 1)));

  return result_1107303447;

}

function nsuRepeatChar(c_771753057, count_771753058) {
  var result_771753059 = [];

    result_771753059 = nimCopy(null, mnewString(count_771753058), NTI33554449);
    Label1: {
      var i_771753064 = 0;
      var colontmp__553648182 = 0;
      colontmp__553648182 = subInt(count_771753058, 1);
      var res_553648183 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_553648183 <= colontmp__553648182)) break Label3;
            i_771753064 = res_553648183;
            result_771753059[chckIndx(i_771753064, 0, (result_771753059).length - 1)] = c_771753057;
            res_553648183 = addInt(res_553648183, 1);
          }
      };
    };

  return result_771753059;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function alignString_805306388(s_805306389, minimumWidth_805306390, align_805306391, fill_805306392) {
      var Temporary1;

  var result_805306393 = [];

    if ((minimumWidth_805306390 == 0)) {
    result_805306393 = nimCopy(null, s_805306389, NTI33554449);
    }
    else {
      if ((validateUtf8_1107303617(s_805306389) == (-1))) {
      Temporary1 = runeLen_1107303445(s_805306389);
      }
      else {
      Temporary1 = (s_805306389).length;
      }
      
      var sRuneLen_805306394 = Temporary1;
      var toFill_805306395 = subInt(minimumWidth_805306390, sRuneLen_805306394);
      if ((toFill_805306395 <= 0)) {
      result_805306393 = nimCopy(null, s_805306389, NTI33554449);
      }
      else {
      if (((align_805306391 == 60) || (align_805306391 == 0))) {
      result_805306393 = nimCopy(null, (s_805306389 || []).concat(nsuRepeatChar(fill_805306392, chckRange(toFill_805306395, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_805306391 == 94)) {
      var half_805306396 = divInt(toFill_805306395, 2);
      result_805306393 = nimCopy(null, (nsuRepeatChar(fill_805306392, chckRange(half_805306396, 0, 2147483647)) || []).concat(s_805306389 || [],nsuRepeatChar(fill_805306392, chckRange(subInt(toFill_805306395, half_805306396), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_805306393 = nimCopy(null, (nsuRepeatChar(fill_805306392, chckRange(toFill_805306395, 0, 2147483647)) || []).concat(s_805306389 || []), NTI33554449);
      }
      }}
    }
    

  return result_805306393;

}

function formatValue_687865947(result_687865949, result_687865949_Idx, value_687865950) {
    var value_687865959 = nimCopy(null, value_687865950, NTI33554449);
    result_687865949[result_687865949_Idx].push.apply(result_687865949[result_687865949_Idx], alignString_805306388(value_687865959, 0, 0, 32));;

  
}

function nsuFindChar(s_771753635, sub_771753636, start_771753637, last_771753638) {
    var Temporary1;

  var result_771753639 = 0;

  BeforeRet: {
    result_771753639 = (-1);
    if ((last_771753638 < 0)) {
    Temporary1 = (s_771753635).length - 1;
    }
    else {
    Temporary1 = last_771753638;
    }
    
    var last_771753640 = Temporary1;
    Label2: {
      var iHEX60gensym176_771753654 = 0;
      var colontmp__553648190 = 0;
      colontmp__553648190 = start_771753637;
      var res_553648191 = colontmp__553648190;
      Label3: {
          Label4: while (true) {
          if (!(res_553648191 <= last_771753640)) break Label4;
            iHEX60gensym176_771753654 = res_553648191;
            if ((s_771753635[chckIndx(iHEX60gensym176_771753654, 0, (s_771753635).length - 1)] == sub_771753636)) {
            result_771753639 = iHEX60gensym176_771753654;
            break BeforeRet;
            }
            
            res_553648191 = addInt(res_553648191, 1);
          }
      };
    };
  };

  return result_771753639;

}

function nsuFindStrA(a_771753613, s_771753614, sub_771753615, start_771753616, last_771753617) {
    var Temporary1;

  var result_771753618 = 0;

  BeforeRet: {
    if ((last_771753617 < 0)) {
    Temporary1 = (s_771753614).length - 1;
    }
    else {
    Temporary1 = last_771753617;
    }
    
    var last_771753619 = Temporary1;
    var subLast_771753620 = subInt((sub_771753615).length, 1);
    if ((subLast_771753620 == (-1))) {
    result_771753618 = start_771753616;
    break BeforeRet;
    }
    
    result_771753618 = (-1);
    var skip_771753621 = start_771753616;
    Label2: {
        Label3: while (true) {
        if (!(subLast_771753620 <= subInt(last_771753619, skip_771753621))) break Label3;
          var i_771753622 = subLast_771753620;
          Label4: {
              Label5: while (true) {
              if (!(s_771753614[chckIndx(addInt(skip_771753621, i_771753622), 0, (s_771753614).length - 1)] == sub_771753615[chckIndx(i_771753622, 0, (sub_771753615).length - 1)])) break Label5;
                if ((i_771753622 == 0)) {
                result_771753618 = skip_771753621;
                break BeforeRet;
                }
                
                i_771753622 = subInt(i_771753622, 1);
              }
          };
          skip_771753621 = addInt(skip_771753621, a_771753613[chckIndx(s_771753614[chckIndx(addInt(skip_771753621, subLast_771753620), 0, (s_771753614).length - 1)], 0, (a_771753613).length - 1)]);
        }
    };
  };

  return result_771753618;

}

function fill_771753558(a_771753560, value_771753561) {
    var xHEX60gensym172_771753567 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_771753567 <= (a_771753560).length - 1)) break Label2;
          a_771753560[chckIndx(xHEX60gensym172_771753567, 0, (a_771753560).length - 1)] = value_771753561;
          xHEX60gensym172_771753567 = addInt(xHEX60gensym172_771753567, 1);
        }
    };

  
}

function nsuInitSkipTable(a_771753555, sub_771753556) {
    var m_771753557 = (sub_771753556).length;
    fill_771753558(a_771753555, m_771753557);
    Label1: {
      var i_771753577 = 0;
      var colontmp__553648196 = 0;
      colontmp__553648196 = subInt(m_771753557, 1);
      var i_553648197 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648197 < colontmp__553648196)) break Label3;
            i_771753577 = i_553648197;
            a_771753555[chckIndx(sub_771753556[chckIndx(i_771753577, 0, (sub_771753556).length - 1)], 0, (a_771753555).length - 1)] = subInt(subInt(m_771753557, 1), i_771753577);
            i_553648197 = addInt(i_553648197, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_771753610) {
  var result_771753611 = [new Int32Array(256)];

    nsuInitSkipTable(result_771753611[0], sub_771753610);

  return result_771753611[0];

}

function nsuFindStr(s_771753672, sub_771753673, start_771753674, last_771753675) {
  var result_771753676 = 0;

  BeforeRet: {
    if ((subInt((s_771753672).length, start_771753674) < (sub_771753673).length)) {
    result_771753676 = (-1);
    break BeforeRet;
    }
    
    if (((sub_771753673).length == 1)) {
    result_771753676 = nsuFindChar(s_771753672, sub_771753673[chckIndx(0, 0, (sub_771753673).length - 1)], start_771753674, last_771753675);
    break BeforeRet;
    }
    
    result_771753676 = nsuFindStrA(nsuInitNewSkipTable(sub_771753673), s_771753672, sub_771753673, start_771753674, last_771753675);
  };

  return result_771753676;

}

function contains_771753814(s_771753815, sub_771753816) {
  var result_771753817 = false;

  BeforeRet: {
    result_771753817 = (0 <= nsuFindStr(s_771753815, sub_771753816, 0, (-1)));
    break BeforeRet;
  };

  return result_771753817;

}

function open_536871330(f_536871331, f_536871331_Idx, filename_536871332, mode_536871333, bufSize_536871334) {
    var Temporary1;

  var result_536871335 = false;

    var p_536871336 = (Temporary1 = fopen(toJSStr(filename_536871332), FormatOpen_536871329[chckIndx(mode_536871333, 0, (FormatOpen_536871329).length - 1)]), Temporary1)[0], p_536871336_Idx = Temporary1[1];
    if (!((p_536871336 == null && p_536871336_Idx == 0))) {
    var f2_536871337 = p_536871336;
    result_536871335 = true;
    f_536871331[f_536871331_Idx] = p_536871336;
    if (((0 < bufSize_536871334) && ((bufSize_536871334 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_536871331[f_536871331_Idx], null, 0, _IOFBF, Number(BigInt.asUintN(32, BigInt(bufSize_536871334))));
    }
    else {
    if ((bufSize_536871334 == 0)) {
    var _ = setvbuf(f_536871331[f_536871331_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_536871335;

}

function rawFileSize_536871294(file_536871295) {
  var result_536871296 = 0n;

    var oldPos_536871297 = ftello(file_536871295);
    var _ = fseeko(file_536871295, 0n, 2);
    result_536871296 = ftello(file_536871295);
    var _ = fseeko(file_536871295, oldPos_536871297, 0);

  return result_536871296;

}

function raiseEIO_536870996(msg_536870997) {
    raiseException({message: nimCopy(null, msg_536870997, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_536871077(f_536871078) {
    if (!((ferror(f_536871078) == 0))) {
    var msg_536871079 = ([101,114,114,110,111,58,32] || []).concat(HEX24_385875976(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_536871078);
    raiseEIO_536870996(msg_536871079);
    }
    

  
}

function readBuffer_536871080(f_536871081, buffer_536871082, buffer_536871082_Idx, len_536871083) {
  var result_536871084 = 0;

    result_536871084 = Number(BigInt.asIntN(32, BigInt(fread(buffer_536871082, buffer_536871082_Idx, 1, Number(BigInt.asUintN(32, BigInt(len_536871083))), f_536871081))));
    if (!((result_536871084 == len_536871083))) {
    checkErr_536871077(f_536871081);
    }
    

  return result_536871084;

}

function endOfFile_536871298(f_536871299) {
  var result_536871300 = false;

  BeforeRet: {
    var c_536871301 = fgetc(f_536871299);
    var _ = ungetc(c_536871301, f_536871299);
    result_536871300 = (c_536871301 < 0);
    break BeforeRet;
  };

  return result_536871300;

}

function readAllBuffer_536871289(file_536871290) {
  var result_536871291 = [];

    result_536871291 = nimCopy(null, [], NTI33554449);
    var buffer_536871292 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_536871293 = readBuffer_536871080(file_536871290, buffer_536871292, chckIndx(0, 0, (buffer_536871292).length - 1), 4000);
          if ((bytesRead_536871293 == 4000)) {
          result_536871291.push.apply(result_536871291, buffer_536871292);;
          }
          else {
            if (buffer_536871292.length < chckRange(bytesRead_536871293, 0, 2147483647)) { for (var i = buffer_536871292.length; i < chckRange(bytesRead_536871293, 0, 2147483647); ++i) buffer_536871292.push(0); }
         else {buffer_536871292.length = chckRange(bytesRead_536871293, 0, 2147483647); };
            result_536871291.push.apply(result_536871291, buffer_536871292);;
            break Label1;
          }
          
        }
    };

  return result_536871291;

}

function readAllFile_536871302(file_536871303, len_536871304) {
  var result_536871305 = [];

    result_536871305 = nimCopy(null, mnewString(chckRange(Number(len_536871304), 0, 2147483647)), NTI33554449);
    var bytes_536871306 = readBuffer_536871080(file_536871303, result_536871305, chckIndx(0, 0, (result_536871305).length - 1), chckRange(Number(len_536871304), 0, 2147483647));
    if (endOfFile_536871298(file_536871303)) {
    if ((BigInt(bytes_536871306) < len_536871304)) {
    if (result_536871305.length < chckRange(bytes_536871306, 0, 2147483647)) { for (var i = result_536871305.length; i < chckRange(bytes_536871306, 0, 2147483647); ++i) result_536871305.push(0); }
         else {result_536871305.length = chckRange(bytes_536871306, 0, 2147483647); };
    }
    
    }
    else {
    result_536871305.push.apply(result_536871305, readAllBuffer_536871289(file_536871303));;
    }
    

  return result_536871305;

}

function readAll_536871311(file_536871312) {
  var result_536871313 = [];

    var len_536871314 = rawFileSize_536871294(file_536871312);
    if ((0n < len_536871314)) {
    result_536871313 = nimCopy(null, readAllFile_536871302(file_536871312, len_536871314), NTI33554449);
    }
    else {
      result_536871313 = nimCopy(null, readAllBuffer_536871289(file_536871312), NTI33554449);
    }
    

  return result_536871313;

}

function close_536871170(f_536871171) {
    if (!((f_536871171 == null))) {
    var _ = fclose(f_536871171);
    }
    

  
}

function readFile_536871410(filename_536871411) {
  var result_536871412 = [];

    var f_536871413 = [null];
    if (open_536871330(f_536871413, 0, filename_536871411, 0, (-1))) {
    try {
    result_536871412 = nimCopy(null, readAll_536871311(f_536871413[0]), NTI33554449);
    } finally {
    close_536871170(f_536871413[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_536871411 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_536871412;

}

function HEX5BHEX5D_771753215(s_771753218, x_771753219) {
  var result_771753220 = [];

    var a_771753222 = x_771753219.a;
    var L_771753224 = addInt(subInt(x_771753219.b, a_771753222), 1);
    result_771753220 = nimCopy(null, mnewString(chckRange(L_771753224, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_771753229 = 0;
      var i_553648203 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648203 < L_771753224)) break Label3;
            i_771753229 = i_553648203;
            result_771753220[chckIndx(i_771753229, 0, (result_771753220).length - 1)] = s_771753218[chckIndx(addInt(i_771753229, a_771753222), 0, (s_771753218).length - 1)];
            i_553648203 = addInt(i_553648203, 1);
          }
      };
    };

  return result_771753220;

}

function HEX2EHEX2E_1124073520(a_1124073523, b_1124073524) {
  var result_1124073525 = ({a: 0, b: 0});

    result_1124073525 = nimCopy(result_1124073525, {a: a_1124073523, b: b_1124073524}, NTI855638085);

  return result_1124073525;

}

function get_path_687865886(filename_687865887) {
  var result_687865888 = [];

  BeforeRet: {
    var x_687865889 = subInt((filename_687865887).length, 1);
    Label1: {
        Label2: while (true) {
        if (!((0 < x_687865889) && !((filename_687865887[chckIndx(x_687865889, 0, (filename_687865887).length - 1)] == 47)))) break Label2;
          x_687865889 = subInt(x_687865889, 1);
        }
    };
    if ((filename_687865887[chckIndx(x_687865889, 0, (filename_687865887).length - 1)] == 47)) {
    result_687865888 = nimCopy(null, HEX5BHEX5D_771753215(filename_687865887, HEX2EHEX2E_1124073520(0, x_687865889)), NTI33554449);
    break BeforeRet;
    }
    
    result_687865888 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_687865888;

}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function concat_687865961(seqs_687865963) {
  var result_687865964 = [];

    var L_687865965 = 0;
    Label1: {
      var seqitm_687865979 = [];
      var i_553648207 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648207 < (seqs_687865963).length)) break Label3;
            seqitm_687865979 = seqs_687865963[chckIndx(i_553648207, 0, (seqs_687865963).length - 1)];
            L_687865965 = addInt(L_687865965, (seqitm_687865979).length);
            i_553648207 += 1;
          }
      };
    };
    result_687865964 = new Array(chckRange(L_687865965, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_687865965, 0, 2147483647) ; ++i) { result_687865964[i] = ({kind: 0, value: [], pos: []}); }    var i_687865993 = 0;
    Label4: {
      var s_687865997 = [];
      var i_553648215 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_553648215 < (seqs_687865963).length)) break Label6;
            s_687865997 = seqs_687865963[chckIndx(i_553648215, 0, (seqs_687865963).length - 1)];
            Label7: {
              var itm_687866019 = ({kind: 0, value: [], pos: []});
              var i_553648212 = 0;
              var L_553648213 = (s_687865997).length;
              Label8: {
                  Label9: while (true) {
                  if (!(i_553648212 < L_553648213)) break Label9;
                    itm_687866019 = s_687865997[chckIndx(i_553648212, 0, (s_687865997).length - 1)];
                    result_687865964[chckIndx(i_687865993, 0, (result_687865964).length - 1)] = nimCopy(result_687865964[chckIndx(i_687865993, 0, (result_687865964).length - 1)], itm_687866019, NTI687865869);
                    i_687865993 = addInt(i_687865993, 1);
                    i_553648212 += 1;
                    if (!(((s_687865997).length == L_553648213))) {
                    failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_553648215 += 1;
          }
      };
    };

  return result_687865964;

}

function find_1040187447(a_1040187450, item_1040187451) {
  var result_1040187452 = 0;

  BeforeRet: {
    result_1040187452 = 0;
    Label1: {
      var i_1040187456 = [];
      var i_553648219 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648219 < (a_1040187450).length)) break Label3;
            i_1040187456 = a_1040187450[chckIndx(i_553648219, 0, (a_1040187450).length - 1)];
            if (eqStrings(i_1040187456, item_1040187451)) {
            break BeforeRet;
            }
            
            result_1040187452 = addInt(result_1040187452, 1);
            i_553648219 += 1;
          }
      };
    };
    result_1040187452 = (-1);
  };

  return result_1040187452;

}

function contains_1040187442(a_1040187444, item_1040187445) {
  var result_1040187446 = false;

  BeforeRet: {
    result_1040187446 = (0 <= find_1040187447(a_1040187444, item_1040187445));
    break BeforeRet;
  };

  return result_1040187446;

}

function find_687866134(a_687866137, item_687866138) {
  var result_687866139 = 0;

  BeforeRet: {
    result_687866139 = 0;
    Label1: {
      var i_687866143 = 0;
      var i_553648223 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648223 < (a_687866137).length)) break Label3;
            i_687866143 = a_687866137[chckIndx(i_553648223, 0, (a_687866137).length - 1)];
            if ((i_687866143 == item_687866138)) {
            break BeforeRet;
            }
            
            result_687866139 = addInt(result_687866139, 1);
            i_553648223 += 1;
          }
      };
    };
    result_687866139 = (-1);
  };

  return result_687866139;

}

function contains_687866129(a_687866131, item_687866132) {
  var result_687866133 = false;

  BeforeRet: {
    result_687866133 = (0 <= find_687866134(a_687866131, item_687866132));
    break BeforeRet;
  };

  return result_687866133;

}

function tokenizer_687865912(input_687865913, filename_687865914) {
                var Temporary8;

  var result_687865915 = [];

  BeforeRet: {
    var x_687865916 = 0;
    var output_687865921 = [];
    var line_number_687865922 = 1;
    var line_pos_687865923 = 1;
    Label1: {
        Label2: while (true) {
        if (!(x_687865916 < (input_687865913).length)) break Label2;
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 64)) {
          x_687865916 = addInt(x_687865916, 1);
          if (!((x_687865916 < (input_687865913).length))) {
          fatal_754974722([64,32,110,111,116,32,102,111,108,108,111,119,101,100,32,98,121,32,102,105,108,101,110,97,109,101,46]);
          }
          
          var buffer_687865928 = [];
          Label3: {
              Label4: while (true) {
              if (!((x_687865916 < (input_687865913).length) && !((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 59)))) break Label4;
                addChar(buffer_687865928, input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]);;
                x_687865916 = addInt(x_687865916, 1);
              }
          };
          if (!((x_687865916 < (input_687865913).length))) {
          Label5: {
            var fmtRes_687865941 = [mnewString(0)];
            fmtRes_687865941[0].push.apply(fmtRes_687865941[0], [39,64]);;
            formatValue_687865947(fmtRes_687865941, 0, buffer_687865928);
            fmtRes_687865941[0].push.apply(fmtRes_687865941[0], [39,32,110,111,116,32,102,111,108,108,111,119,101,100,32,98,121,32,115,101,109,105,99,111,108,111,110]);;
          };
          fatal_754974722(fmtRes_687865941[0]);
          }
          
          var filecontents_687865960 = [];
          if (contains_771753814(buffer_687865928, [115,116,100])) {
          filecontents_687865960 = nimCopy(null, makeNimstrLit("single_import\x0A\x0A$within_math_scope=false;\x0A\x0Afunc style_and_class(){\x0A  if (is_defined($class)){\x0A    ` class=\"`$class`\" `\x0A  }\x0A  if (is_defined($style)){\x0A    ` style=\"`$style`\" `\x0A  }\x0A}\x0A\x0Afunc b(){\x0A  if (eql($format, html)){\x0A    `<b`style_and_class()`>`$input`</b>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    `**`$input`**`\x0A  }\x0A    if (eql($format, latex)){\x0A      `\\\\textbf{`$input`}`\x0A    }\x0A}\x0Afunc i(){\x0A  if (eql($format, html)){\x0A    `<em`style_and_class()`>`$input`</em>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    `*`$input`*`\x0A  }\x0A    if (eql($format, latex)){\x0A      `\\\\textit{`$input`}`\x0A    }\x0A}\x0A\x0Afunc div(){\x0A  if (eql($format, html)){\x0A    `<div`style_and_class()`>`$input`</div>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    $input\x0A  }\x0A  if (eql($format, latex)){\x0A    $input\x0A  }\x0A}\x0A\x0Afunc h1(){\x0A  if (eql($format, html)){\x0A    `<h1`style_and_class()`>`$input`</h1>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    `\\n# `$input`\\n`\x0A  }\x0A    if (eql($format, latex)){\x0A      `\\\\section{`$input`}`\x0A    }\x0A}\x0Afunc h2(){\x0A  if (eql($format, html)){\x0A    `<h2`style_and_class()`>`$input`</h2>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    `\\n## `$input`\\n`\x0A  }\x0A    if (eql($format, latex)){\x0A      `\\\\subsection{`$input`}`\x0A    }\x0A}\x0A\x0Afunc h3(){\x0A  if (eql($format, html)){\x0A    `<h3`style_and_class()`>`$input`</h3>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    `\\n### `$input`\\n`\x0A  }\x0A    if (eql($format, latex)){\x0A      `\\\\subsubsection{`$input`}`\x0A    }\x0A}\x0A\x0Afunc newline(){\x0A  if (eql($format, html)){\x0A    `<br>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    `\\n`\x0A  }\x0A  if (eql($format, latex)){\x0A    `\\n`\x0A  }\x0A}\x0A\x0Afunc body(){\x0A  if (eql($format, html)){\x0A    `<!DOCTYPE HTML>`\x0A    `<html>`\x0A      `<head>`\x0A        if (is_defined($title)){`<title>`$title`</title>`}\x0A        if (is_defined($favicon)){`<link rel=\"icon\" type=\"image/x-icon\" href=\"`$favicon`\">`}\x0A      `</head>`\x0A      `<body>`\x0A            `<style>ul{margin-left:5%;}</style>`\x0A        $input\x0A      `</body>`\x0A    `</html>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    $input\x0A  }\x0A    if (eql($format, latex)){\x0A      `\\\\documentclass[english]{article}`\x0A      `\\\\usepackage{hyperref}`\x0A      `\\\\usepackage{amsmath}`\x0A      `\\\\usepackage{unicode-math}`\x0A      `\\\\usepackage[utf8]{inputenc}`\x0A      if (is_defined($title)){\x0A        `\\\\title{`$title`}`\x0A      }\x0A      `\\\\begin{document}`\x0A      if (is_defined($title)){\x0A        `\\\\maketitle`\x0A      }\x0A      $input\x0A      `\\\\end{document}`\x0A    }\x0A  \x0A}\x0A\x0Afunc link(link){\x0A  if (eql($format, html)){\x0A    `<a href=\"`$link`\"`style_and_class()`>`$input`</a>`\x0A  }\x0A  if (eql($format, markdown)){\x0A      `[`$input`](`$link`)`  \x0A  }\x0A    if (eql($format, latex)){\x0A        `\\\\href{`link`}{`$input`}`\x0A    }\x0A}\x0Afunc center(){\x0A  if (eql($format, html)){\x0A    div(style=`text-align:center;`){$input}\x0A  }\x0A    else{\x0A      $input\x0A    }\x0A}\x0A\x0A\x0A\x0Afunc quote(){\x0A  if (eql($format, html)){\x0A    `<blockquote>`$input`</blockquote>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    `>`\x0A    $par_iter = 0;\x0A    while (not(eql($par_iter, len($input)))){\x0A      if (eql($input[$par_iter], `\\n`)){\x0A        `\\n>`\x0A      }\x0A      else{\x0A        $input[$par_iter]\x0A      }\x0A      $par_iter=sum($par_iter, 1);\x0A    }\x0A  }\x0A    if (eql($format, latex)){\x0A      `\\\\begin{quote}`\x0A      $input\x0A      `\\\\end{quote}`\x0A\x0A    }\x0A}\x0Afunc q(){\x0A  if (eql($format, html)){\x0A    `<q>`$input`</q>`\x0A  }\x0A  if (eql($format, markdown)){\x0A    `\"`$input`\"`\x0A  }\x0A  if (eql($format, latex)){\x0A    `\"`$input`\"`\x0A  }\x0A\x0A}\x0A\x0Afunc p(){\x0A  $paragraph_iter=0;\x0A  $output=``;\x0A  if (eql($format,html)){\x0A    $output=$output`<p style=\"text-indent:50px;\">`;\x0A  }  \x0A    if (eql($format,latex)){\x0A    $output=$output`\\\\begin{paragraph}`;\x0A  }\x0A  while (not(eql($paragraph_iter, len($input)))){\x0A    if (or(eql($input[$paragraph_iter], `\\n`), eql($input[$paragraph_iter], ` `), eql($input[$paragraph_iter], `\\t`))){\x0A      if (not(eql(len($output), 0))){\x0A        if (not(eql($output[sum(len($output), `-1`)], ` `))){\x0A          $output=$output ` `;\x0A        }\x0A      }\x0A    }\x0A    else{\x0A      $output = $output $input[$paragraph_iter];\x0A    }\x0A    $paragraph_iter=sum($paragraph_iter, 1);\x0A  }\x0A  if (eql($format, markdown)){\x0A    $output = `\\n\\n`$output`\\n\\n`;\x0A  }\x0A  if (eql($format,html)){\x0A    $output=$output`</p>`;\x0A  }\x0A  if (eql($format,latex)){\x0A    $output=$output`\\\\end{paragraph}`;\x0A  }\x0A  $output\x0A}\x0A\x0Afunc sup()~{\x0A  if (or(eql($format, html), eql($format, markdown))){\x0A    `<sup>`$input`</sup>`\x0A  }\x0A    if (eql($format, latex)){\x0A      if (not($within_math_scope)){\x0A        \"$\" \x0A        $within_math_scope=true;\x0A        `^{`$input`}`\x0A        \"$\"\x0A        $within_math_scope=false;\x0A      }\x0A      else{\x0A        `^{`$input`}`\x0A      }\x0A    }\x0A}\x0Afunc sub()~{\x0A  if (or(eql($format, html), eql($format, markdown))){\x0A    `<sub>`$input`</sub>`\x0A  }\x0A    if (eql($format, latex)){\x0A      if (not($within_math_scope)){\x0A        \"$\" \x0A        $within_math_scope=true;\x0A        `_{`$input`}`\x0A        \"$\"\x0A        $within_math_scope=false;\x0A      }\x0A      else{\x0A        `_{`$input`}`\x0A      }\x0A    }\x0A}\x0A\x0Afunc code(){\x0A  if (eql($format, html)){\x0A    `<code>`$input`</code>`\x0A  }\x0A  elif (eql($format, markdown)){\x0A    `\\``$input`\\``\x0A  }\x0A}\x0A\x0A\x0Afunc frac(~a,~b){\x0A  if (or(eql($format, html), eql($format, markdown))){\x0A      `(`sup{$a}`/`sub{$b}`)`\x0A    \x0A  }\x0A    if (eql($format, latex)){\x0A      if (not($within_math_scope)){\x0A        $within_math_scope=true;\x0A        `$\\\\frac{`$a`}{`$b`}$`\x0A      }\x0A      else{\x0A        `\\\\frac{`$a`}{`$b`}`\x0A      }\x0A    }\x0A}\x0A\x0A\x0A$mult=\"\xC3\x97\";\x0A$plusmin=\"\xC2\xB1\";\x0A$sqrt=\"\xE2\x88\x9A\";\x0A$noteq=\"\xE2\x89\xA0\";\x0A$approxeq=\"\xE2\x89\x88\";\x0A$theta=\"\xCE\xB8\";\x0A$interrobang=\"\xE2\x80\xBD\";\x0A\x0Aif (eql($format, latex)){\x0A  $mult = \"\\\\(\\\\times\\\\)\";\x0A  $plusmn = \"U+00B1\";\x0A  $sqrt ~ \x0A    if (not($within_math_scope)){\"$\"}\x0A    \"\\\\sqrt[]{}\"\x0A    if (not($within_math_scope)){\"$\"};\x0A  $noteq ~ \x0A    if (not($within_math_scope)){\"$\"}\x0A    \"\\\\ne\"\x0A    if (not($within_math_scope)){\"$\"};\x0A  $approxeq ~ \x0A    if (not($within_math_scope)){\"$\"}\x0A    \"\\\\approx\"\x0A    if (not($within_math_scope)){\"$\"};\x0A  $theta ~ \x0A    if (not($within_math_scope)){\"$\"}\x0A    \"\\\\muptheta\"\x0A    if (not($within_math_scope)){\"$\"};\x0A  $interrobang=\"!?\";\x0A}\x0A\x0A"), NTI33554449);
          }
          else {
          if (contains_771753814(buffer_687865928, [104,116,116,112,115,58,47,47])) {
          }
          else {
            filecontents_687865960 = nimCopy(null, readFile_536871410((get_path_687865886(filename_687865914) || []).concat(buffer_687865928 || [])), NTI33554449);
          }
          }
          output_687865921 = nimCopy(null, concat_687865961([nimCopy(null, output_687865921, NTI687865937), tokenizer_687865912(filecontents_687865960, (get_path_687865886(filename_687865914) || []).concat(buffer_687865928 || []))]), NTI687865948);
          }
          else {
          if ((ConstSet2[input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]] != undefined)) {
          var buffer_687866095 = [];
          Label6: {
              Label7: while (true) {
                if (!(x_687865916 < (input_687865913).length)) Temporary8 = false; else {                  Temporary8 = (ConstSet3[input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]] != undefined);                }              if (!Temporary8) break Label7;
                addChar(buffer_687866095, input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]);;
                x_687865916 = addInt(x_687865916, 1);
              }
          };
          if (eqStrings(buffer_687866095, [115,105,110,103,108,101,95,105,109,112,111,114,116])) {
          if (contains_1040187442(files_completed_687865866[0], filename_687865914)) {
          var tmp_687866112 = [];
          result_687865915 = nimCopy(null, tmp_687866112, NTI687866036);
          break BeforeRet;
          }
          
          }
          else {
          output_687865921.push({kind: 1, value: nimCopy(null, buffer_687866095, NTI33554449), pos: (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || [])});;
          }
          
          x_687865916 = subInt(x_687865916, 1);
          }
          else {
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 35)) {
          Label9: {
              Label10: while (true) {
              if (!((x_687865916 < (input_687865913).length) && !((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 10)))) break Label10;
                x_687865916 = addInt(x_687865916, 1);
              }
          };
          x_687865916 = subInt(x_687865916, 1);
          }
          else {
          if (contains_687866129([40,41], input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)])) {
          output_687865921.push({kind: 5, value: nimCharToStr(input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]), pos: (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || [])});;
          }
          else {
          if (contains_687866129([123,125], input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)])) {
          output_687865921.push({kind: 7, value: nimCharToStr(input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]), pos: (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || [])});;
          }
          else {
          if (contains_687866129([91,93], input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)])) {
          output_687865921.push({kind: 8, value: nimCharToStr(input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]), pos: (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || [])});;
          }
          else {
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 59)) {
          output_687865921.push({kind: 9, value: [59], pos: (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || [])});;
          }
          else {
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 44)) {
          output_687865921.push({kind: 6, value: [44], pos: (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || [])});;
          }
          else {
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 36)) {
          output_687865921.push({kind: 4, value: [36], pos: (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || [])});;
          }
          else {
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 61)) {
          output_687865921.push({kind: 3, value: [61], pos: (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || [])});;
          }
          else {
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 96)) {
          var starts_at_687866185 = (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || []);
          x_687865916 = addInt(x_687865916, 1);
          var buffer_687866190 = [];
          Label11: {
              Label12: while (true) {
              if (!((x_687865916 < (input_687865913).length) && !((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 96)))) break Label12;
                if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 92)) {
                x_687865916 = addInt(x_687865916, 1);
                if ((x_687865916 == (input_687865913).length)) {
                fatal_754974722([85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103]);
                }
                
                if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 110)) {
                addChar(buffer_687866190, 10);;
                }
                else {
                if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 116)) {
                addChar(buffer_687866190, 9);;
                }
                else {
                addChar(buffer_687866190, input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]);;
                }
                }
                }
                else {
                addChar(buffer_687866190, input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]);;
                }
                
                if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 10)) {
                line_number_687865922 = addInt(line_number_687865922, 1);
                line_pos_687865923 = 0;
                }
                
                line_pos_687865923 = addInt(line_pos_687865923, 1);
                x_687865916 = addInt(x_687865916, 1);
              }
          };
          if ((x_687865916 == (input_687865913).length)) {
          fatal_754974722(([85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,32] || []).concat(starts_at_687866185 || []));
          }
          
          output_687865921.push({kind: 0, value: nimCopy(null, buffer_687866190, NTI33554449), pos: nimCopy(null, starts_at_687866185, NTI33554449)});;
          }
          else {
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 34)) {
          var starts_at_687866211 = (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || []);
          x_687865916 = addInt(x_687865916, 1);
          var buffer_687866216 = [];
          Label13: {
              Label14: while (true) {
              if (!((x_687865916 < (input_687865913).length) && !((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 34)))) break Label14;
                if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 92)) {
                x_687865916 = addInt(x_687865916, 1);
                if ((x_687865916 == (input_687865913).length)) {
                fatal_754974722([85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103]);
                }
                
                if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 110)) {
                addChar(buffer_687866216, 10);;
                }
                else {
                if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 116)) {
                addChar(buffer_687866216, 9);;
                }
                else {
                addChar(buffer_687866216, input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]);;
                }
                }
                }
                else {
                addChar(buffer_687866216, input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)]);;
                }
                
                if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 10)) {
                line_number_687865922 = addInt(line_number_687865922, 1);
                line_pos_687865923 = 0;
                }
                
                line_pos_687865923 = addInt(line_pos_687865923, 1);
                x_687865916 = addInt(x_687865916, 1);
              }
          };
          if ((x_687865916 == (input_687865913).length)) {
          fatal_754974722(([85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,32] || []).concat(starts_at_687866211 || []));
          }
          
          output_687865921.push({kind: 1, value: [116,101,120,116], pos: nimCopy(null, starts_at_687866211, NTI33554449)});;
          output_687865921.push({kind: 7, value: [123], pos: nimCopy(null, starts_at_687866211, NTI33554449)});;
          output_687865921.push({kind: 0, value: nimCopy(null, buffer_687866216, NTI33554449), pos: nimCopy(null, starts_at_687866211, NTI33554449)});;
          output_687865921.push({kind: 7, value: [125], pos: nimCopy(null, starts_at_687866211, NTI33554449)});;
          }
          else {
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 126)) {
          output_687865921.push({kind: 10, value: [126], pos: (filename_687865914 || []).concat([58] || [],HEX24_385875976(line_number_687865922) || [])});;
          }
          else {
          if ((input_687865913[chckIndx(x_687865916, 0, (input_687865913).length - 1)] == 10)) {
          line_number_687865922 = addInt(line_number_687865922, 1);
          }
          }}}}}}}}}}}}}
          line_pos_687865923 = addInt(line_pos_687865923, 1);
          x_687865916 = addInt(x_687865916, 1);
        }
    };
    var Temporary15 = nimCopy(null, filename_687865914, NTI33554449);
    files_completed_687865866[0].push(Temporary15);;
    result_687865915 = nimCopy(null, output_687865921, NTI687865893);
    break BeforeRet;
  };

  return result_687865915;

}

function HEX5BHEX5D_721420347(s_721420349, i_721420350) {
  var result_721420351 = null;

    result_721420351 = s_721420349[chckIndx(subInt((s_721420349).length, i_721420350), 0, (s_721420349).length - 1)];

  return result_721420351;

}

function HEX5BHEX5D_721420391(s_721420395, x_721420396) {
  var result_721420397 = [];

    var a_721420399 = x_721420396.a;
    var L_721420401 = addInt(subInt(x_721420396.b, a_721420399), 1);
    result_721420397 = new Array(chckRange(L_721420401, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_721420401, 0, 2147483647) ; ++i) { result_721420397[i] = ({kind: 0, name: [], value: [], subvalues: [], fnvars: [], fncontents: [], pos: [], is_approx: false}); }    Label1: {
      var i_721420410 = 0;
      var i_553648235 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648235 < L_721420401)) break Label3;
            i_721420410 = i_553648235;
            result_721420397[chckIndx(i_721420410, 0, (result_721420397).length - 1)] = nimCopy(result_721420397[chckIndx(i_721420410, 0, (result_721420397).length - 1)], s_721420395[chckIndx(addInt(i_721420410, a_721420399), 0, (s_721420395).length - 1)], NTI721420292);
            i_553648235 = addInt(i_553648235, 1);
          }
      };
    };

  return result_721420397;

}

function find_721420553(a_721420556, item_721420557) {
  var result_721420558 = 0;

  BeforeRet: {
    result_721420558 = 0;
    Label1: {
      var i_721420572 = 0;
      var i_553648239 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648239 < (a_721420556).length)) break Label3;
            i_721420572 = a_721420556[chckIndx(i_553648239, 0, (a_721420556).length - 1)];
            if ((i_721420572 == item_721420557)) {
            break BeforeRet;
            }
            
            result_721420558 = addInt(result_721420558, 1);
            i_553648239 += 1;
          }
      };
    };
    result_721420558 = (-1);
  };

  return result_721420558;

}

function contains_721420548(a_721420550, item_721420551) {
  var result_721420552 = false;

  BeforeRet: {
    result_721420552 = (0 <= find_721420553(a_721420550, item_721420551));
    break BeforeRet;
  };

  return result_721420552;

}

function parser_721420321(input_721420322) {
  var result_721420323 = [];

  BeforeRet: {
    var x_721420324 = 0;
    var output_721420325 = [];
    Label1: {
        Label2: while (true) {
        if (!(x_721420324 < (input_721420322).length)) break Label2;
          var pos_721420329 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].pos, NTI33554449);
          if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 0)) {
          output_721420325.push({kind: 1, value: nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, NTI33554449), is_approx: false, name: [], subvalues: [], fnvars: [], fncontents: [], pos: []});;
          }
          else {
          if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 8)) {
          if (eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [93])) {
          fatal_754974722(([67,108,111,115,105,110,103,32,98,114,97,99,107,101,116,32,98,101,102,111,114,101,32,111,112,101,110,105,110,103,32,98,114,97,99,107,101,116,32] || []).concat(pos_721420329 || []));
          }
          
          if ((x_721420324 == 0)) {
          fatal_754974722(([79,112,101,110,105,110,103,32,98,114,97,99,107,101,116,32,97,116,32,98,101,103,105,110,110,105,110,103,32,111,102,32,102,105,108,101,32] || []).concat(pos_721420329 || []));
          }
          
          if (((output_721420325).length < 1)) {
          fatal_754974722(([79,112,101,110,105,110,103,32,98,114,97,99,107,101,116,32,110,111,116,32,112,114,101,99,101,101,100,101,100,32,98,121,32,97,32,116,111,107,101,110,32] || []).concat(pos_721420329 || []));
          }
          
          var preval_721420372 = nimCopy(null, HEX5BHEX5D_721420347(output_721420325, 1), NTI721420292);
          var post_tokens_721420377 = [];
          var depth_721420378 = 1;
          output_721420325 = nimCopy(null, HEX5BHEX5D_721420391(output_721420325, HEX2EHEX2E_1124073520(0, subInt((output_721420325).length, 2))), NTI721420373);
          x_721420324 = addInt(x_721420324, 1);
          Label3: {
              Label4: while (true) {
              if (!((x_721420324 < (input_721420322).length) && (0 < depth_721420378))) break Label4;
                if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 8)) {
                if (eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [91])) {
                depth_721420378 = addInt(depth_721420378, 1);
                }
                else {
                depth_721420378 = subInt(depth_721420378, 1);
                }
                
                if ((0 < depth_721420378)) {
                var Temporary5 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)], NTI687865869);
                post_tokens_721420377.push(Temporary5);;
                x_721420324 = addInt(x_721420324, 1);
                }
                
                }
                else {
                  var Temporary6 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)], NTI687865869);
                  post_tokens_721420377.push(Temporary6);;
                  x_721420324 = addInt(x_721420324, 1);
                }
                
              }
          };
          if ((x_721420324 == (input_721420322).length)) {
          fatal_754974722(([85,110,116,101,114,109,105,110,97,116,101,100,32,97,114,114,97,121,32,97,99,99,101,115,115,32] || []).concat(pos_721420329 || []));
          }
          
          output_721420325.push({kind: 6, subvalues: [nimCopy(null, preval_721420372, NTI721420292)], fncontents: parser_721420321(post_tokens_721420377), pos: nimCopy(null, pos_721420329, NTI33554449), is_approx: false, name: [], value: [], fnvars: []});;
          }
          else {
          if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 4)) {
          x_721420324 = addInt(x_721420324, 1);
          if (!((x_721420324 < (input_721420322).length))) {
          fatal_754974722(([36,32,102,111,108,108,111,119,101,100,32,98,121,32,69,79,70,59,32,115,104,111,117,108,100,32,98,101,32,102,111,108,108,111,119,101,100,32,98,121,32,105,100,101,110,116,105,102,105,101,114,32] || []).concat(pos_721420329 || []));
          }
          
          if (((addInt(x_721420324, 1) < (input_721420322).length) && ((input_721420322[chckIndx(addInt(x_721420324, 1), 0, (input_721420322).length - 1)].kind == 3) || (input_721420322[chckIndx(addInt(x_721420324, 1), 0, (input_721420322).length - 1)].kind == 10)))) {
          var is_approx_721420518 = false;
          if ((input_721420322[chckIndx(addInt(x_721420324, 1), 0, (input_721420322).length - 1)].kind == 10)) {
          is_approx_721420518 = true;
          }
          
          var name_721420523 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, NTI33554449);
          x_721420324 = addInt(x_721420324, 2);
          if (!((x_721420324 < (input_721420322).length))) {
          fatal_754974722(([105,110,99,111,109,112,108,101,116,101,32,118,97,114,105,97,98,108,101,32,100,101,99,108,101,114,97,116,105,111,110,59,32,69,79,70,32] || []).concat(pos_721420329 || []));
          }
          
          var buffer_721420535 = [];
          var depth_721420536 = 0;
          Label7: {
              Label8: while (true) {
              if (!((x_721420324 < (input_721420322).length) && !(((depth_721420536 == 0) && (input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 9))))) break Label8;
                if (contains_721420548([5, 7], input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind)) {
                if (contains_771753814([123,40], input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value)) {
                depth_721420536 = addInt(depth_721420536, 1);
                }
                else {
                depth_721420536 = subInt(depth_721420536, 1);
                }
                
                }
                
                var Temporary9 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)], NTI687865869);
                buffer_721420535.push(Temporary9);;
                x_721420324 = addInt(x_721420324, 1);
              }
          };
          if ((!((depth_721420536 == 0)) || (x_721420324 == (input_721420322).length))) {
          fatal_754974722(([117,110,116,101,114,109,105,110,97,116,101,100,32,118,97,114,105,97,98,108,101,32,100,101,99,108,101,114,97,116,105,111,110,32,115,116,97,114,116,105,110,103,32,97,116,32] || []).concat(pos_721420329 || []));
          }
          
          output_721420325.push({kind: 5, name: nimCopy(null, name_721420523, NTI33554449), subvalues: parser_721420321(buffer_721420535), pos: nimCopy(null, pos_721420329, NTI33554449), is_approx: is_approx_721420518, value: [], fnvars: [], fncontents: []});;
          x_721420324 = subInt(x_721420324, 1);
          }
          else {
          output_721420325.push({kind: 4, name: nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, NTI33554449), pos: nimCopy(null, pos_721420329, NTI33554449), is_approx: false, value: [], subvalues: [], fnvars: [], fncontents: []});;
          }
          
          }
          else {
          if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 1)) {
          if (eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [102,117,110,99])) {
          x_721420324 = addInt(x_721420324, 1);
          if ((((input_721420322).length <= x_721420324) || !((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 1)))) {
          fatal_754974722(([102,117,110,99,32,115,104,111,117,108,100,32,98,101,32,102,111,108,108,111,119,101,100,32,98,121,32,105,100,101,110,116,105,102,105,101,114,32] || []).concat(pos_721420329 || []));
          }
          
          var name_721420644 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, NTI33554449);
          x_721420324 = addInt(x_721420324, 1);
          if (((((input_721420322).length <= x_721420324) || !((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 5))) || !(eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [40])))) {
          fatal_754974722(([102,117,110,99,116,105,111,110,32,110,97,109,101,32,115,104,111,117,108,100,32,98,101,32,102,111,108,108,111,119,101,100,32,98,121,32,111,112,101,110,105,110,103,32,112,97,114,101,110,116,104,101,115,105,115,32] || []).concat(pos_721420329 || []));
          }
          
          x_721420324 = addInt(x_721420324, 1);
          var depth_721420660 = 0;
          var var_name_721420661 = [];
          var var_buffer_721420666 = [];
          var args_721420671 = [];
          var fncontent_721420676 = [];
          var is_approx_721420677 = false;
          Label10: {
              Label11: while (true) {
              if (!((x_721420324 < (input_721420322).length) && !((((depth_721420660 == 0) && (input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 5)) && eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [41]))))) break Label11;
                Label12: {
                  if (((depth_721420660 == 0) && (input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 6))) {
                  if (eqStrings(var_name_721420661, [])) {
                  if (!(((var_buffer_721420666).length == 1))) {
                  fatal_754974722(([105,108,108,101,103,97,108,32,102,117,110,99,116,105,111,110,32,118,97,114,105,97,98,108,101,32] || []).concat(pos_721420329 || []));
                  }
                  
                  var_name_721420661 = nimCopy(null, var_buffer_721420666[chckIndx(0, 0, (var_buffer_721420666).length - 1)].value, NTI33554449);
                  var_buffer_721420666 = nimCopy(null, [], NTI687865901);
                  }
                  
                  args_721420671.push({name: nimCopy(null, var_name_721420661, NTI33554449), content: parser_721420321(var_buffer_721420666), is_approx: is_approx_721420677});;
                  var_buffer_721420666 = nimCopy(null, [], NTI687865901);
                  var_name_721420661 = nimCopy(null, [], NTI33554449);
                  x_721420324 = addInt(x_721420324, 1);
                  is_approx_721420677 = false;
                  break Label12;
                  }
                  
                  if (((depth_721420660 == 0) && (input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 3))) {
                  if (!(eqStrings(var_name_721420661, []))) {
                  fatal_754974722(([105,108,108,101,103,97,108,32,118,97,114,105,97,98,108,101,59,32,100,111,117,98,108,101,32,97,115,115,105,103,110,109,101,110,116,32] || []).concat(pos_721420329 || []));
                  }
                  
                  if (!(((var_buffer_721420666).length == 1))) {
                  fatal_754974722(([73,108,108,101,103,97,108,32,118,97,114,105,97,98,108,101,59,32,110,97,109,101,32,105,115,110,39,116,32,111,110,101,32,116,111,107,101,110] || []).concat(pos_721420329 || []));
                  }
                  
                  var_name_721420661 = nimCopy(null, var_buffer_721420666[chckIndx(0, 0, (var_buffer_721420666).length - 1)].value, NTI33554449);
                  var_buffer_721420666 = nimCopy(null, [], NTI687865901);
                  x_721420324 = addInt(x_721420324, 1);
                  break Label12;
                  }
                  
                  if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 5)) {
                  if (eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [40])) {
                  depth_721420660 = addInt(depth_721420660, 1);
                  }
                  else {
                  depth_721420660 = subInt(depth_721420660, 1);
                  }
                  
                  }
                  
                  if (((depth_721420660 == 0) && (input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 10))) {
                  is_approx_721420677 = true;
                  x_721420324 = addInt(x_721420324, 1);
                  break Label12;
                  }
                  
                  var Temporary13 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)], NTI687865869);
                  var_buffer_721420666.push(Temporary13);;
                  x_721420324 = addInt(x_721420324, 1);
                };
              }
          };
          if ((eqStrings(var_name_721420661, []) && (0 < (var_buffer_721420666).length))) {
          var_name_721420661 = nimCopy(null, var_buffer_721420666[chckIndx(0, 0, (var_buffer_721420666).length - 1)].value, NTI33554449);
          var_buffer_721420666 = nimCopy(null, [], NTI687865901);
          }
          
          if (!(eqStrings(var_name_721420661, []))) {
          args_721420671.push({name: nimCopy(null, var_name_721420661, NTI33554449), content: parser_721420321(var_buffer_721420666), is_approx: is_approx_721420677});;
          }
          
          depth_721420660 = 1;
          if ((((input_721420322).length <= x_721420324) || !((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 5)))) {
          fatal_754974722(([73,108,108,101,103,97,108,32,102,117,110,99,116,105,111,110,32,100,101,99,108,101,114,97,116,105,111,110,44,32] || []).concat(pos_721420329 || []));
          }
          
          x_721420324 = addInt(x_721420324, 1);
          is_approx_721420677 = false;
          if (((x_721420324 < (input_721420322).length) && (input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 10))) {
          is_approx_721420677 = true;
          x_721420324 = addInt(x_721420324, 1);
          }
          
          if ((((input_721420322).length <= x_721420324) || !((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 7)))) {
          fatal_754974722(([73,108,108,101,103,97,108,32,102,117,110,99,116,105,111,110,32,100,101,99,108,101,114,97,116,105,111,110,32] || []).concat(pos_721420329 || []));
          }
          
          x_721420324 = addInt(x_721420324, 1);
          Label14: {
              Label15: while (true) {
              if (!((x_721420324 < (input_721420322).length) && (0 < depth_721420660))) break Label15;
                if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 7)) {
                if (eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [123])) {
                depth_721420660 = addInt(depth_721420660, 1);
                }
                else {
                depth_721420660 = subInt(depth_721420660, 1);
                }
                
                if (!((depth_721420660 == 0))) {
                var Temporary16 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)], NTI687865869);
                fncontent_721420676.push(Temporary16);;
                }
                
                }
                else {
                  var Temporary17 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)], NTI687865869);
                fncontent_721420676.push(Temporary17);;
                }
                
                x_721420324 = addInt(x_721420324, 1);
              }
          };
          x_721420324 = subInt(x_721420324, 1);
          if (!(eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [125]))) {
          fatal_754974722(([105,108,108,101,103,97,108,32,102,117,110,99,116,105,111,110,59,32,117,110,116,101,114,109,105,110,97,116,101,100,32] || []).concat(pos_721420329 || []));
          }
          
          functions_721420320[0].push({kind: 0, name: nimCopy(null, name_721420644, NTI33554449), fnvars: nimCopy(null, args_721420671, NTI721420561), fncontents: parser_721420321(fncontent_721420676), pos: nimCopy(null, pos_721420329, NTI33554449), is_approx: is_approx_721420677, value: [], subvalues: []});;
          }
          else {
            if ((((addInt(x_721420324, 1) < (input_721420322).length) && contains_721420548([5, 7], input_721420322[chckIndx(addInt(x_721420324, 1), 0, (input_721420322).length - 1)].kind)) && contains_771753814([40,123], input_721420322[chckIndx(addInt(x_721420324, 1), 0, (input_721420322).length - 1)].value))) {
            var name_721420841 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, NTI33554449);
            var args_721420846 = [];
            var arg_buffer_721420851 = [];
            var fncontents_721420856 = [];
            var arg_name_721420857 = [];
            var depth_721420858 = 0;
            x_721420324 = addInt(x_721420324, 1);
            if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 5)) {
            x_721420324 = addInt(x_721420324, 1);
            Label18: {
                Label19: while (true) {
                if (!((x_721420324 < (input_721420322).length) && !((((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 5) && eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [41])) && (depth_721420858 == 0))))) break Label19;
                  Label20: {
                    if (((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 3) && (depth_721420858 == 0))) {
                    arg_name_721420857 = nimCopy(null, arg_buffer_721420851[chckIndx(0, 0, (arg_buffer_721420851).length - 1)].value, NTI33554449);
                    arg_buffer_721420851 = nimCopy(null, [], NTI687865901);
                    x_721420324 = addInt(x_721420324, 1);
                    break Label20;
                    }
                    
                    if (((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 6) && (depth_721420858 == 0))) {
                    args_721420846.push({name: nimCopy(null, arg_name_721420857, NTI33554449), content: parser_721420321(arg_buffer_721420851), is_approx: false});;
                    arg_name_721420857 = nimCopy(null, [], NTI33554449);
                    arg_buffer_721420851 = nimCopy(null, [], NTI687865901);
                    x_721420324 = addInt(x_721420324, 1);
                    break Label20;
                    }
                    
                    if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 5)) {
                    if (eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [41])) {
                    depth_721420858 = subInt(depth_721420858, 1);
                    }
                    else {
                    depth_721420858 = addInt(depth_721420858, 1);
                    }
                    
                    }
                    
                    var Temporary21 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)], NTI687865869);
                    arg_buffer_721420851.push(Temporary21);;
                    x_721420324 = addInt(x_721420324, 1);
                  };
                }
            };
            if (!((x_721420324 < (input_721420322).length))) {
            fatal_754974722(([117,110,116,101,114,109,105,110,97,116,101,100,32,102,117,110,99,116,105,111,110,32,99,97,108,108,32] || []).concat(pos_721420329 || []));
            }
            
            if ((eqStrings(arg_name_721420857, []) && (0 < (arg_buffer_721420851).length))) {
            args_721420846.push({name: [], content: parser_721420321(arg_buffer_721420851), is_approx: false});;
            }
            
            if (!(eqStrings(arg_name_721420857, []))) {
            args_721420846.push({name: nimCopy(null, arg_name_721420857, NTI33554449), content: parser_721420321(arg_buffer_721420851), is_approx: false});;
            }
            
            x_721420324 = addInt(x_721420324, 1);
            }
            
            arg_buffer_721420851 = nimCopy(null, [], NTI687865901);
            depth_721420858 = 1;
            if ((((x_721420324 < (input_721420322).length) && (input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 7)) && eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [123]))) {
            x_721420324 = addInt(x_721420324, 1);
            Label22: {
                Label23: while (true) {
                if (!((x_721420324 < (input_721420322).length) && (0 < depth_721420858))) break Label23;
                  if ((input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].kind == 7)) {
                  if (eqStrings(input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, [123])) {
                  depth_721420858 = addInt(depth_721420858, 1);
                  }
                  else {
                  depth_721420858 = subInt(depth_721420858, 1);
                  }
                  
                  }
                  
                  if ((0 < depth_721420858)) {
                  var Temporary24 = nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)], NTI687865869);
                  fncontents_721420856.push(Temporary24);;
                  }
                  
                  x_721420324 = addInt(x_721420324, 1);
                }
            };
            }
            
            output_721420325.push({kind: 2, name: nimCopy(null, name_721420841, NTI33554449), fnvars: nimCopy(null, args_721420846, NTI721420716), fncontents: parser_721420321(fncontents_721420856), pos: nimCopy(null, pos_721420329, NTI33554449), is_approx: false, value: [], subvalues: []});;
            x_721420324 = subInt(x_721420324, 1);
            }
            else {
            output_721420325.push({kind: 1, value: nimCopy(null, input_721420322[chckIndx(x_721420324, 0, (input_721420322).length - 1)].value, NTI33554449), pos: nimCopy(null, pos_721420329, NTI33554449), is_approx: false, name: [], subvalues: [], fnvars: [], fncontents: []});;
            }
            
          }
          
          }
          }}}
          x_721420324 = addInt(x_721420324, 1);
        }
    };
    result_721420323 = nimCopy(null, output_721420325, NTI721420313);
    break BeforeRet;
  };

  return result_721420323;

}

function integerOutOfRangeError_822083909() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_822083947(s_822083948, b_822083949, b_822083949_Idx) {
      var Temporary1;
          var Temporary4;

  var result_822083950 = 0;

    var sign_822083951 = (-1n);
    var i_822083952 = 0;
    if ((i_822083952 < (s_822083948).length)) {
    if ((s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)] == 43)) {
    i_822083952 += 1;
    }
    else {
    if ((s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)] == 45)) {
    i_822083952 += 1;
    sign_822083951 = 1n;
    }
    }
    }
    
      if (!(i_822083952 < (s_822083948).length)) Temporary1 = false; else {        Temporary1 = (ConstSet4[s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)]] != undefined);      }    if (Temporary1) {
    b_822083949[b_822083949_Idx] = 0n;
    Label2: {
        Label3: while (true) {
          if (!(i_822083952 < (s_822083948).length)) Temporary4 = false; else {            Temporary4 = (ConstSet5[s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_822083986 = (s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_822083986)) / 10n <= b_822083949[b_822083949_Idx])) {
          b_822083949[b_822083949_Idx] = ((b_822083949[b_822083949_Idx] * 10n) - BigInt(c_822083986));
          }
          else {
          integerOutOfRangeError_822083909();
          }
          
          i_822083952 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_822083952 < (s_822083948).length) && (s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)] == 95))) break Label6;
                i_822083952 += 1;
              }
          };
        }
    };
    if (((sign_822083951 == (-1n)) && (b_822083949[b_822083949_Idx] == (-9223372036854775808n)))) {
    integerOutOfRangeError_822083909();
    }
    else {
      b_822083949[b_822083949_Idx] = (b_822083949[b_822083949_Idx] * sign_822083951);
      result_822083950 = i_822083952;
    }
    
    }
    

  return result_822083950;

}

function npuParseBiggestInt(s_822084009, number_822084010, number_822084010_Idx) {
  var result_822084011 = 0;

    var res_822084012 = [0n];
    result_822084011 = rawParseInt_822083947(s_822084009, res_822084012, 0);
    if (!((result_822084011 == 0))) {
    number_822084010[number_822084010_Idx] = res_822084012[0];
    }
    

  return result_822084011;

}

function npuParseInt(s_822084014, number_822084015, number_822084015_Idx) {
  var result_822084016 = 0;

    var res_822084017 = [0n];
    result_822084016 = npuParseBiggestInt(s_822084014, res_822084017, 0);
    if (((res_822084017[0] < (-2147483648n)) || (2147483647n < res_822084017[0]))) {
    integerOutOfRangeError_822083909();
    }
    
    if (!((result_822084016 == 0))) {
    number_822084015[number_822084015_Idx] = chckRange(Number(res_822084017[0]), (-2147483648), 2147483647);
    }
    

  return result_822084016;

}

function parseInt_822084527(s_822084528, number_822084529, number_822084529_Idx, start_822084530) {
  var result_822084531 = 0;

    result_822084531 = npuParseInt((s_822084528.slice(start_822084530, (s_822084528).length - 1 + 1)), number_822084529, number_822084529_Idx);

  return result_822084531;

}

function nsuParseInt(s_771752793) {
  var result_771752794 = [0];

    result_771752794[0] = 0;
    var L_771752795 = parseInt_822084527(s_771752793, result_771752794, 0, 0);
    if ((!((L_771752795 == (s_771752793).length)) || (L_771752795 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_771752793 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_771752794[0];

}

function warn_754974724(text_754974725) {
    rawEcho(([87,97,114,110,105,110,103,58,32] || []).concat(text_754974725 || []));

  
}

function get_var_738197518(vars_738197519, vars_738197519_Idx, name_738197520) {
  var result_738197521 = [];

  BeforeRet: {
    var x_738197522 = 0;
    Label1: {
        Label2: while (true) {
        if (!(x_738197522 < (vars_738197519[vars_738197519_Idx]).length)) break Label2;
          if (eqStrings(vars_738197519[vars_738197519_Idx][chckIndx(x_738197522, 0, (vars_738197519[vars_738197519_Idx]).length - 1)].name, name_738197520)) {
          if (((vars_738197519[vars_738197519_Idx][chckIndx(x_738197522, 0, (vars_738197519[vars_738197519_Idx]).length - 1)].approx_content).length == 0)) {
          result_738197521 = nimCopy(null, vars_738197519[vars_738197519_Idx][chckIndx(x_738197522, 0, (vars_738197519[vars_738197519_Idx]).length - 1)].content, NTI33554449);
          break BeforeRet;
          }
          else {
            result_738197521 = nimCopy(null, compile_text_738197512(vars_738197519[vars_738197519_Idx][chckIndx(x_738197522, 0, (vars_738197519[vars_738197519_Idx]).length - 1)].approx_content, vars_738197519, vars_738197519_Idx), NTI33554449);
            break BeforeRet;
          }
          
          }
          
          x_738197522 = addInt(x_738197522, 1);
        }
    };
    result_738197521 = nimCopy(null, [110,117,108,108], NTI33554449);
    break BeforeRet;
  };

  return result_738197521;

}

function text_738197741(input_738197742, vars_738197743, vars_738197743_Idx) {
  var result_738197744 = [];

  BeforeRet: {
    var format_738197745 = get_var_738197518(vars_738197743, vars_738197743_Idx, [102,111,114,109,97,116]);
    var output_738197746 = [];
    Label1: {
      var c_738197747 = 0;
      var i_553648246 = 0;
      var L_553648247 = (input_738197742).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648246 < L_553648247)) break Label3;
            c_738197747 = input_738197742[chckIndx(i_553648246, 0, (input_738197742).length - 1)];
            switch (toJSStr(format_738197745)) {
            case "html":
              switch (c_738197747) {
              case 10:
                output_738197746.push.apply(output_738197746, [60,98,114,62]);;
                break;
              case 60:
                output_738197746.push.apply(output_738197746, [38,108,116,59]);;
                break;
              case 62:
                output_738197746.push.apply(output_738197746, [38,103,116,59]);;
                break;
              case 38:
                output_738197746.push.apply(output_738197746, [38,97,109,112,59]);;
                break;
              default: 
                addChar(output_738197746, c_738197747);;
                break;
              }
              break;
            case "markdown":
              switch (c_738197747) {
              case 10:
                output_738197746.push.apply(output_738197746, [10]);;
                break;
              case 60:
                output_738197746.push.apply(output_738197746, [92,60]);;
                break;
              case 62:
                output_738197746.push.apply(output_738197746, [92,62]);;
                break;
              case 92:
                output_738197746.push.apply(output_738197746, [92,92]);;
                break;
              case 42:
                output_738197746.push.apply(output_738197746, [92,42]);;
                break;
              case 35:
                output_738197746.push.apply(output_738197746, [92,35]);;
                break;
              case 95:
                output_738197746.push.apply(output_738197746, [92,95]);;
                break;
              default: 
                addChar(output_738197746, c_738197747);;
                break;
              }
              break;
            case "latex":
              switch (c_738197747) {
              case 10:
                output_738197746.push.apply(output_738197746, [10]);;
                break;
              default: 
                addChar(output_738197746, c_738197747);;
                break;
              }
              break;
            default: 
              break;
            }
            i_553648246 += 1;
            if (!(((input_738197742).length == L_553648247))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(272, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_738197744 = nimCopy(null, output_738197746, NTI33554449);
    break BeforeRet;
  };

  return result_738197744;

}

function equals_738197637(input_738197638, vars_738197639, vars_738197639_Idx) {
  var result_738197640 = [];

  BeforeRet: {
    if (!(((input_738197638.fnvars).length == 2))) {
    fatal_754974722(([105,108,108,101,103,97,108,32,101,113,108,32,115,116,97,116,101,109,101,110,116,59,32,103,111,116,32] || []).concat(HEX24_385875976((input_738197638.subvalues).length) || [],[32,97,114,103,117,109,101,110,116,115,32,105,110,115,116,101,97,100,32,111,102,32,50,32] || [],input_738197638.pos || []));
    }
    
    var a_738197647 = compile_text_738197512(input_738197638.fnvars[chckIndx(0, 0, (input_738197638.fnvars).length - 1)].content, vars_738197639, vars_738197639_Idx);
    var b_738197648 = compile_text_738197512(input_738197638.fnvars[chckIndx(1, 0, (input_738197638.fnvars).length - 1)].content, vars_738197639, vars_738197639_Idx);
    if (eqStrings(a_738197647, b_738197648)) {
    result_738197640 = nimCopy(null, [116,114,117,101], NTI33554449);
    break BeforeRet;
    }
    
    result_738197640 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    break BeforeRet;
  };

  return result_738197640;

}

function sum_function_738197649(input_738197650, vars_738197651, vars_738197651_Idx) {
  var result_738197652 = [];

  BeforeRet: {
    var total_738197653 = 0;
    Label1: {
      var item_738197657 = ({name: [], content: [], is_approx: false});
      var i_553648252 = 0;
      var L_553648253 = (input_738197650.fnvars).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648252 < L_553648253)) break Label3;
            item_738197657 = input_738197650.fnvars[chckIndx(i_553648252, 0, (input_738197650.fnvars).length - 1)];
            var got_738197658 = compile_text_738197512(item_738197657.content, vars_738197651, vars_738197651_Idx);
++excHandler;
            try {
            total_738197653 = addInt(total_738197653, nsuParseInt(got_738197658));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            result_738197652 = nimCopy(null, [69,82,82,79,82], NTI33554449);
            break BeforeRet;
            lastJSError = prevJSError;
            } finally {
            }
            i_553648252 += 1;
            if (!(((input_738197650.fnvars).length == L_553648253))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_738197652 = nimCopy(null, HEX24_385875976(total_738197653), NTI33554449);
    break BeforeRet;
  };

  return result_738197652;

}

function nimFloatToString_402653338(a_402653339) {
  var result_402653340 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_402653339))
      result_402653340 = a_402653339 === 0 && 1 / a_402653339 < 0 ? "-0.0" : a_402653339+".0"
    else {
      result_402653340 = a_402653339+""
      if(nimOnlyDigitsOrMinus(result_402653340)){
        result_402653340 = a_402653339+".0"
      }
    }
  

  return result_402653340;

}

function addFloat_33557563(result_33557565, result_33557565_Idx, x_33557566) {
    add_33556373(result_33557565, result_33557565_Idx, nimFloatToString_402653338(x_33557566));

  
}

function HEX24_33557559(x_33557561) {
  var result_33557562 = [[]];

    addFloat_33557563(result_33557562, 0, x_33557561);

  return result_33557562[0];

}

function substr_33558084(s_33558085, first_33558086, last_33558087) {
  var result_33558088 = [];

    var first_33558089 = nimMax(first_33558086, 0);
    var L_33558090 = nimMax(addInt(subInt(nimMin(last_33558087, (s_33558085).length - 1), first_33558089), 1), 0);
    result_33558088 = nimCopy(null, mnewString(chckRange(L_33558090, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33558095 = 0;
      var colontmp__553648278 = 0;
      colontmp__553648278 = subInt(L_33558090, 1);
      var res_553648279 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_553648279 <= colontmp__553648278)) break Label3;
            i_33558095 = res_553648279;
            result_33558088[chckIndx(i_33558095, 0, (result_33558088).length - 1)] = s_33558085[chckIndx(addInt(i_33558095, first_33558089), 0, (s_33558085).length - 1)];
            res_553648279 = addInt(res_553648279, 1);
          }
      };
    };

  return result_33558088;

}

function substr_33558096(s_33558097, first_33558098) {
  var result_33558099 = [];

    result_33558099 = nimCopy(null, substr_33558084(s_33558097, first_33558098, (s_33558097).length - 1), NTI33554449);

  return result_33558099;

}

function nsuReplaceStr(s_771753823, sub_771753824, by_771753825) {
  var result_771753826 = [];

    result_771753826 = nimCopy(null, [], NTI33554449);
    var subLen_771753827 = (sub_771753824).length;
    if ((subLen_771753827 == 0)) {
    result_771753826 = nimCopy(null, s_771753823, NTI33554449);
    }
    else {
    if ((subLen_771753827 == 1)) {
    var c_771753828 = sub_771753824[chckIndx(0, 0, (sub_771753824).length - 1)];
    var last_771753829 = (s_771753823).length - 1;
    var i_771753830 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_771753831 = nsuFindChar(s_771753823, c_771753828, chckRange(i_771753830, 0, 2147483647), last_771753829);
          if ((j_771753831 < 0)) {
          break Label1;
          }
          
          result_771753826.push.apply(result_771753826, substr_33558084(s_771753823, i_771753830, subInt(j_771753831, 1)));;
          result_771753826.push.apply(result_771753826, by_771753825);;
          i_771753830 = addInt(j_771753831, subLen_771753827);
        }
    };
    result_771753826.push.apply(result_771753826, substr_33558096(s_771753823, i_771753830));;
    }
    else {
      var a_771753832 = nsuInitNewSkipTable(sub_771753824);
      var last_771753833 = (s_771753823).length - 1;
      var i_771753834 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_771753835 = nsuFindStrA(a_771753832, s_771753823, sub_771753824, chckRange(i_771753834, 0, 2147483647), last_771753833);
            if ((j_771753835 < 0)) {
            break Label3;
            }
            
            result_771753826.push.apply(result_771753826, substr_33558084(s_771753823, i_771753834, subInt(j_771753835, 1)));;
            result_771753826.push.apply(result_771753826, by_771753825);;
            i_771753834 = addInt(j_771753835, subLen_771753827);
          }
      };
      result_771753826.push.apply(result_771753826, substr_33558096(s_771753823, i_771753834));;
    }
    }

  return result_771753826;

}

function force_hyphenate_738197663(text_738197664) {
  var result_738197665 = [];

  BeforeRet: {
    result_738197665 = nimCopy(null, nsuReplaceStr(text_738197664, [32], [92,45,32]), NTI33554449);
    break BeforeRet;
  };

  return result_738197665;

}

function table_738197666(input_738197667, vars_738197668, vars_738197668_Idx) {
  var result_738197669 = [];

  BeforeRet: {
    var format_738197670 = get_var_738197518(vars_738197668, vars_738197668_Idx, [102,111,114,109,97,116]);
    var got_738197671 = [];
    var x_738197672 = 0;
    var output_738197673 = [];
    var printed_table_header_738197674 = false;
    var items_738197675 = 0;
    Label1: {
      var row_738197679 = ({name: [], content: [], is_approx: false});
      var i_553648256 = 0;
      var L_553648257 = (input_738197667.fnvars).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648256 < L_553648257)) break Label3;
            row_738197679 = input_738197667.fnvars[chckIndx(i_553648256, 0, (input_738197667.fnvars).length - 1)];
            if ((items_738197675 < (row_738197679.content[chckIndx(0, 0, (row_738197679.content).length - 1)].fnvars).length)) {
            items_738197675 = (row_738197679.content[chckIndx(0, 0, (row_738197679.content).length - 1)].fnvars).length;
            }
            
            i_553648256 += 1;
            if (!(((input_738197667.fnvars).length == L_553648257))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (eqStrings(format_738197670, [104,116,109,108])) {
    output_738197673.push.apply(output_738197673, [60,116,97,98,108,101,62]);;
    }
    
    if (eqStrings(format_738197670, [109,97,114,107,100,111,119,110])) {
    output_738197673.push.apply(output_738197673, [10]);;
    }
    
    if (eqStrings(format_738197670, [108,97,116,101,120])) {
    output_738197673.push.apply(output_738197673, [92,98,101,103,105,110,123,116,97,98,117,108,97,114,125,123]);;
    var per_item_width_738197686 = (1.0 / items_738197675);
    Label4: {
      var i_738197691 = 0;
      var res_553648260 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_553648260 <= items_738197675)) break Label6;
            i_738197691 = res_553648260;
            output_738197673.push.apply(output_738197673, ([32,112,123] || []).concat(HEX24_33557559(per_item_width_738197686) || [],[92,108,105,110,101,119,105,100,116,104,125,32] || []));;
            res_553648260 = addInt(res_553648260, 1);
          }
      };
    };
    output_738197673.push.apply(output_738197673, [125]);;
    }
    
    Label7: {
      var row_generic_738197698 = ({name: [], content: [], is_approx: false});
      var i_553648272 = 0;
      var L_553648273 = (input_738197667.fnvars).length;
      Label8: {
          Label9: while (true) {
          if (!(i_553648272 < L_553648273)) break Label9;
            row_generic_738197698 = input_738197667.fnvars[chckIndx(i_553648272, 0, (input_738197667.fnvars).length - 1)];
            Label10: {
              var completed_738197699 = 0;
              if (eqStrings(format_738197670, [104,116,109,108])) {
              output_738197673.push.apply(output_738197673, [60,116,114,62]);;
              }
              
              if ((!(((row_generic_738197698.content).length == 1)) || !(eqStrings(row_generic_738197698.content[chckIndx(0, 0, (row_generic_738197698.content).length - 1)].name, [114,111,119])))) {
              warn_754974724(([83,107,105,112,112,105,110,103,32,114,111,119,32] || []).concat(input_738197667.pos || []));
              break Label10;
              }
              
              var row_738197703 = nimCopy(null, row_generic_738197698.content[chckIndx(0, 0, (row_generic_738197698.content).length - 1)], NTI721420292);
              Label11: {
                var item_738197707 = ({name: [], content: [], is_approx: false});
                var i_553648265 = 0;
                var L_553648266 = (row_738197703.fnvars).length;
                Label12: {
                    Label13: while (true) {
                    if (!(i_553648265 < L_553648266)) break Label13;
                      item_738197707 = row_738197703.fnvars[chckIndx(i_553648265, 0, (row_738197703.fnvars).length - 1)];
                      completed_738197699 = addInt(completed_738197699, 1);
                      got_738197671 = nimCopy(null, compile_text_738197512(item_738197707.content, vars_738197668, vars_738197668_Idx), NTI33554449);
                      if (eqStrings(format_738197670, [104,116,109,108])) {
                      output_738197673.push.apply(output_738197673, ([60,116,100,62] || []).concat(got_738197671 || [],[60,47,116,100,62] || []));;
                      }
                      
                      if (eqStrings(format_738197670, [109,97,114,107,100,111,119,110])) {
                      output_738197673.push.apply(output_738197673, (got_738197671 || []).concat([124] || []));;
                      }
                      
                      if (eqStrings(format_738197670, [108,97,116,101,120])) {
                      output_738197673.push.apply(output_738197673, ([] || []).concat(force_hyphenate_738197663(got_738197671) || [],[38] || []));;
                      }
                      
                      i_553648265 += 1;
                      if (!(((row_738197703.fnvars).length == L_553648266))) {
                      failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              Label14: {
                  Label15: while (true) {
                  if (!(completed_738197699 < items_738197675)) break Label15;
                    completed_738197699 = addInt(completed_738197699, 1);
                    if (eqStrings(format_738197670, [104,116,109,108])) {
                    output_738197673.push.apply(output_738197673, [60,116,100,62,32,60,47,116,100,62]);;
                    }
                    
                    if (eqStrings(format_738197670, [109,97,114,107,100,111,119,110])) {
                    output_738197673.push.apply(output_738197673, [32,124]);;
                    }
                    
                    if (eqStrings(format_738197670, [108,97,116,101,120])) {
                    output_738197673.push.apply(output_738197673, [32,38,32]);;
                    }
                    
                  }
              };
              if (eqStrings(format_738197670, [104,116,109,108])) {
              output_738197673.push.apply(output_738197673, [60,47,116,114,62]);;
              }
              
              if (eqStrings(format_738197670, [109,97,114,107,100,111,119,110])) {
              if (!(printed_table_header_738197674)) {
              output_738197673.push.apply(output_738197673, [10,124]);;
              Label16: {
                var item_738197720 = 0;
                var res_553648270 = 1;
                Label17: {
                    Label18: while (true) {
                    if (!(res_553648270 <= items_738197675)) break Label18;
                      item_738197720 = res_553648270;
                      output_738197673.push.apply(output_738197673, [45,124]);;
                      res_553648270 = addInt(res_553648270, 1);
                    }
                };
              };
              printed_table_header_738197674 = true;
              }
              
              output_738197673.push.apply(output_738197673, [10]);;
              }
              
              if (eqStrings(format_738197670, [108,97,116,101,120])) {
              output_738197673.push.apply(output_738197673, [92,92,92,104,108,105,110,101,32]);;
              }
              
            };
            i_553648272 += 1;
            if (!(((input_738197667.fnvars).length == L_553648273))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (eqStrings(format_738197670, [104,116,109,108])) {
    output_738197673.push.apply(output_738197673, [60,47,116,97,98,108,101,62]);;
    }
    
    if (eqStrings(format_738197670, [109,97,114,107,100,111,119,110])) {
    output_738197673.push.apply(output_738197673, [10]);;
    }
    
    if (eqStrings(format_738197670, [108,97,116,101,120])) {
    output_738197673.push.apply(output_738197673, [92,101,110,100,123,116,97,98,117,108,97,114,125]);;
    }
    
    result_738197669 = nimCopy(null, output_738197673, NTI33554449);
    break BeforeRet;
  };

  return result_738197669;

}

function list_738197721(input_738197722, vars_738197723, vars_738197723_Idx) {
  var result_738197724 = [];

  BeforeRet: {
    var format_738197725 = get_var_738197518(vars_738197723, vars_738197723_Idx, [102,111,114,109,97,116]);
    var output_738197726 = [];
    var got_738197727 = [];
    if (eqStrings(format_738197725, [104,116,109,108])) {
    output_738197726.push.apply(output_738197726, [60,117,108,32,115,116,121,108,101,61,34,109,97,114,103,105,110,45,108,101,102,116,58,53,37,59,34,62]);;
    }
    
    if (eqStrings(format_738197725, [109,97,114,107,100,111,119,110])) {
    output_738197726.push.apply(output_738197726, [10]);;
    }
    
    if (eqStrings(format_738197725, [108,97,116,101,120])) {
    output_738197726.push.apply(output_738197726, [92,98,101,103,105,110,123,105,116,101,109,105,122,101,125]);;
    }
    
    Label1: {
      var item_738197731 = ({name: [], content: [], is_approx: false});
      var i_553648282 = 0;
      var L_553648283 = (input_738197722.fnvars).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648282 < L_553648283)) break Label3;
            item_738197731 = input_738197722.fnvars[chckIndx(i_553648282, 0, (input_738197722.fnvars).length - 1)];
            got_738197727 = nimCopy(null, compile_text_738197512(item_738197731.content, vars_738197723, vars_738197723_Idx), NTI33554449);
            if (eqStrings(format_738197725, [104,116,109,108])) {
            output_738197726.push.apply(output_738197726, ([60,108,105,62] || []).concat(got_738197727 || [],[60,47,108,105,62] || []));;
            }
            
            if (eqStrings(format_738197725, [108,97,116,101,120])) {
            output_738197726.push.apply(output_738197726, ([92,105,116,101,109,32] || []).concat(got_738197727 || []));;
            }
            
            if (eqStrings(format_738197725, [109,97,114,107,100,111,119,110])) {
            output_738197726.push.apply(output_738197726, ([45,32] || []).concat(nsuReplaceStr(got_738197727, [10], [10,9]) || [],[10] || []));;
            }
            
            i_553648282 += 1;
            if (!(((input_738197722.fnvars).length == L_553648283))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (eqStrings(format_738197725, [104,116,109,108])) {
    output_738197726.push.apply(output_738197726, [60,47,117,108,62]);;
    }
    
    if (eqStrings(format_738197725, [109,97,114,107,100,111,119,110])) {
    output_738197726.push.apply(output_738197726, [10]);;
    }
    
    if (eqStrings(format_738197725, [108,97,116,101,120])) {
    output_738197726.push.apply(output_738197726, [92,101,110,100,123,105,116,101,109,105,122,101,125]);;
    }
    
    result_738197724 = nimCopy(null, output_738197726, NTI33554449);
    break BeforeRet;
  };

  return result_738197724;

}

function and_function_738197732(input_738197733, vars_738197734, vars_738197734_Idx) {
  var result_738197735 = [];

  BeforeRet: {
    Label1: {
      var item_738197739 = ({name: [], content: [], is_approx: false});
      var i_553648286 = 0;
      var L_553648287 = (input_738197733.fnvars).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648286 < L_553648287)) break Label3;
            item_738197739 = input_738197733.fnvars[chckIndx(i_553648286, 0, (input_738197733.fnvars).length - 1)];
            var got_738197740 = compile_text_738197512(item_738197739.content, vars_738197734, vars_738197734_Idx);
            if (!(eqStrings(got_738197740, [116,114,117,101]))) {
            result_738197735 = nimCopy(null, [102,97,108,115,101], NTI33554449);
            break BeforeRet;
            }
            
            i_553648286 += 1;
            if (!(((input_738197733.fnvars).length == L_553648287))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_738197735 = nimCopy(null, [116,114,117,101], NTI33554449);
    break BeforeRet;
  };

  return result_738197735;

}

function or_function_738197590(input_738197591, vars_738197592, vars_738197592_Idx) {
  var result_738197593 = [];

  BeforeRet: {
    if (!(((input_738197591.fncontents).length == 0))) {
    warn_754974724(([111,114,32,102,117,110,99,116,105,111,110,32,104,97,115,32,102,117,110,99,116,105,111,110,32,99,111,110,116,101,110,116,115,46,32,84,104,101,115,101,32,119,105,108,108,32,98,101,32,105,103,110,111,114,101,100,46,32] || []).concat(input_738197591.pos || []));
    }
    
    Label1: {
      var item_738197619 = ({name: [], content: [], is_approx: false});
      var i_553648290 = 0;
      var L_553648291 = (input_738197591.fnvars).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648290 < L_553648291)) break Label3;
            item_738197619 = input_738197591.fnvars[chckIndx(i_553648290, 0, (input_738197591.fnvars).length - 1)];
            var got_738197620 = [];
            got_738197620 = nimCopy(null, compile_text_738197512(item_738197619.content, vars_738197592, vars_738197592_Idx), NTI33554449);
            if (eqStrings(got_738197620, [116,114,117,101])) {
            result_738197593 = nimCopy(null, [116,114,117,101], NTI33554449);
            break BeforeRet;
            }
            
            i_553648290 += 1;
            if (!(((input_738197591.fnvars).length == L_553648291))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_738197593 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    break BeforeRet;
  };

  return result_738197593;

}

function add_var_738197534(vars_738197535, vars_738197535_Idx, name_738197536, content_738197537) {
    var x_738197538 = 0;
    var found_var_738197539 = false;
    Label1: {
        Label2: while (true) {
        if (!(x_738197538 < (vars_738197535[vars_738197535_Idx]).length)) break Label2;
          if (eqStrings(vars_738197535[vars_738197535_Idx][chckIndx(x_738197538, 0, (vars_738197535[vars_738197535_Idx]).length - 1)].name, name_738197536)) {
          vars_738197535[vars_738197535_Idx][chckIndx(x_738197538, 0, (vars_738197535[vars_738197535_Idx]).length - 1)].content = nimCopy(null, content_738197537, NTI33554449);
          vars_738197535[vars_738197535_Idx][chckIndx(x_738197538, 0, (vars_738197535[vars_738197535_Idx]).length - 1)].approx_content = nimCopy(null, [], NTI721420307);
          found_var_738197539 = true;
          }
          
          x_738197538 = addInt(x_738197538, 1);
        }
    };
    if (!(found_var_738197539)) {
    vars_738197535[vars_738197535_Idx].push({name: nimCopy(null, name_738197536, NTI33554449), content: nimCopy(null, content_738197537, NTI33554449), approx_content: []});;
    }
    

  
}

function add_var_738197573(vars_738197574, vars_738197574_Idx, name_738197575, content_738197576) {
    var x_738197577 = 0;
    var found_var_738197578 = false;
    Label1: {
        Label2: while (true) {
        if (!(x_738197577 < (vars_738197574[vars_738197574_Idx]).length)) break Label2;
          if (eqStrings(vars_738197574[vars_738197574_Idx][chckIndx(x_738197577, 0, (vars_738197574[vars_738197574_Idx]).length - 1)].name, name_738197575)) {
          vars_738197574[vars_738197574_Idx][chckIndx(x_738197577, 0, (vars_738197574[vars_738197574_Idx]).length - 1)].approx_content = nimCopy(null, content_738197576, NTI738197563);
          vars_738197574[vars_738197574_Idx][chckIndx(x_738197577, 0, (vars_738197574[vars_738197574_Idx]).length - 1)].content = nimCopy(null, [], NTI33554449);
          found_var_738197578 = true;
          }
          
          x_738197577 = addInt(x_738197577, 1);
        }
    };
    if (!(found_var_738197578)) {
    vars_738197574[vars_738197574_Idx].push({name: nimCopy(null, name_738197575, NTI33554449), approx_content: nimCopy(null, content_738197576, NTI738197563), content: []});;
    }
    

  
}

function exec_function_738197515(input_738197516, vars_738197517) {
  var result_738197884 = [];

  BeforeRet: {
    var updated_vars_738197885 = [nimCopy(null, vars_738197517, NTI738197514)];
    var contents_738197890 = [];
    var cur_unnamed_var_738197891 = 0;
    Label1: {
      var current_function_738197913 = ({kind: 0, name: [], value: [], subvalues: [], fnvars: [], fncontents: [], pos: [], is_approx: false});
      var i_553648305 = 0;
      var L_553648306 = (functions_721420320[0]).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648305 < L_553648306)) break Label3;
            current_function_738197913 = functions_721420320[0][chckIndx(i_553648305, 0, (functions_721420320[0]).length - 1)];
            Label4: {
              if (!(eqStrings(current_function_738197913.name, input_738197516.name))) {
              break Label4;
              }
              
              Label5: {
                var arg_738197917 = ({name: [], content: [], is_approx: false});
                var i_553648296 = 0;
                var L_553648297 = (current_function_738197913.fnvars).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_553648296 < L_553648297)) break Label7;
                      arg_738197917 = current_function_738197913.fnvars[chckIndx(i_553648296, 0, (current_function_738197913.fnvars).length - 1)];
                      if ((0 < (arg_738197917.content).length)) {
                      var got_738197921 = compile_text_738197512(arg_738197917.content, updated_vars_738197885, 0);
                      add_var_738197534(updated_vars_738197885, 0, arg_738197917.name, got_738197921);
                      }
                      
                      i_553648296 += 1;
                      if (!(((current_function_738197913.fnvars).length == L_553648297))) {
                      failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              Label8: {
                var arg_738197925 = ({name: [], content: [], is_approx: false});
                var i_553648301 = 0;
                var L_553648302 = (input_738197516.fnvars).length;
                Label9: {
                    Label10: while (true) {
                    if (!(i_553648301 < L_553648302)) break Label10;
                      arg_738197925 = input_738197516.fnvars[chckIndx(i_553648301, 0, (input_738197516.fnvars).length - 1)];
                      if (eqStrings(arg_738197925.name, [])) {
                      if (((current_function_738197913.fnvars).length <= cur_unnamed_var_738197891)) {
                      fatal_754974722(([116,111,111,32,109,97,110,121,32,97,110,111,110,121,109,111,117,115,32,97,114,103,117,109,101,110,116,115,32] || []).concat(input_738197516.pos || []));
                      }
                      
                      var vname_738197929 = nimCopy(null, current_function_738197913.fnvars[chckIndx(cur_unnamed_var_738197891, 0, (current_function_738197913.fnvars).length - 1)].name, NTI33554449);
                      if (!(current_function_738197913.fnvars[chckIndx(cur_unnamed_var_738197891, 0, (current_function_738197913.fnvars).length - 1)].is_approx)) {
                      var got_738197930 = compile_text_738197512(arg_738197925.content, updated_vars_738197885, 0);
                      add_var_738197534(updated_vars_738197885, 0, vname_738197929, got_738197930);
                      }
                      else {
                      add_var_738197573(updated_vars_738197885, 0, vname_738197929, arg_738197925.content);
                      }
                      
                      cur_unnamed_var_738197891 = addInt(cur_unnamed_var_738197891, 1);
                      }
                      else {
                        var vname_738197935 = nimCopy(null, arg_738197925.name, NTI33554449);
                        var is_novel_738197936 = (-1);
                        var x_738197937 = 0;
                        Label11: {
                            Label12: while (true) {
                            if (!(x_738197937 < (current_function_738197913.fnvars).length)) break Label12;
                              if (eqStrings(current_function_738197913.fnvars[chckIndx(x_738197937, 0, (current_function_738197913.fnvars).length - 1)].name, vname_738197935)) {
                              is_novel_738197936 = x_738197937;
                              }
                              
                              x_738197937 = addInt(x_738197937, 1);
                            }
                        };
                        if (((is_novel_738197936 == (-1)) || !(current_function_738197913.fnvars[chckIndx(is_novel_738197936, 0, (current_function_738197913.fnvars).length - 1)].is_approx))) {
                        var got_738197945 = compile_text_738197512(arg_738197925.content, updated_vars_738197885, 0);
                        add_var_738197534(updated_vars_738197885, 0, vname_738197935, got_738197945);
                        }
                        else {
                        add_var_738197573(updated_vars_738197885, 0, vname_738197935, arg_738197925.content);
                        }
                        
                      }
                      
                      i_553648301 += 1;
                      if (!(((input_738197516.fnvars).length == L_553648302))) {
                      failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (input_738197516.is_approx) {
              add_var_738197573(updated_vars_738197885, 0, [105,110,112,117,116], input_738197516.fncontents);
              }
              else {
                var got_738197946 = compile_text_738197512(input_738197516.fncontents, updated_vars_738197885, 0);
                add_var_738197534(updated_vars_738197885, 0, [105,110,112,117,116], got_738197946);
              }
              
              var got_738197947 = compile_text_738197512(current_function_738197913.fncontents, updated_vars_738197885, 0);
              result_738197884 = nimCopy(null, got_738197947, NTI33554449);
              break BeforeRet;
            };
            i_553648305 += 1;
            if (!(((functions_721420320[0]).length == L_553648306))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_738197884 = nimCopy(null, [110,117,108,108], NTI33554449);
    break BeforeRet;
  };

  return result_738197884;

}

function compile_text_738197512(nodes_738197513, vars_738197514, vars_738197514_Idx) {
  var result_738197759 = [];

  BeforeRet: {
    var x_738197760 = 0;
    var output_738197761 = [];
    var prev_if_statement_738197762 = 2;
    Label1: {
        Label2: while (true) {
        if (!(x_738197760 < (nodes_738197513).length)) break Label2;
          var pos_738197766 = nimCopy(null, nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].pos, NTI33554449);
          if ((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].kind == 1)) {
          output_738197761.push.apply(output_738197761, nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].value);;
          }
          else {
          if ((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].kind == 6)) {
          var arr_738197776 = compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].subvalues, vars_738197514, vars_738197514_Idx);
          var got_738197777 = compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fncontents, vars_738197514, vars_738197514_Idx);
          var access_738197778 = 0;
++excHandler;
          try {
          access_738197778 = nsuParseInt(got_738197777);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          fatal_754974722(([105,108,108,101,103,97,108,32,97,114,114,97,121,32,97,99,99,101,115,115,32,105,110,100,101,120,59,32,78,65,78,32] || []).concat(pos_738197766 || []));
          lastJSError = prevJSError;
          } finally {
          }
          if ((access_738197778 < 0)) {
          fatal_754974722(([105,108,108,101,103,97,108,32,97,114,114,97,121,32,97,99,99,101,115,115,32,105,110,100,101,120,59,32,108,101,115,115,32,116,104,97,110,32,48,32] || []).concat(pos_738197766 || []));
          }
          
          if (((arr_738197776).length <= access_738197778)) {
          fatal_754974722(([105,108,108,101,103,97,108,32,97,114,114,97,121,32,97,99,99,101,115,115,32,105,110,100,101,120,59,32,116,111,111,32,104,105,103,104,32] || []).concat(pos_738197766 || []));
          }
          
          addChar(output_738197761, arr_738197776[chckIndx(access_738197778, 0, (arr_738197776).length - 1)]);;
          }
          else {
          if ((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].kind == 2)) {
          var got_738197783 = [];
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [105,102])) {
          if (!(((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length == 1))) {
          fatal_754974722(([73,108,108,101,103,97,108,32,105,102,32,115,116,97,116,101,109,101,110,116,32] || []).concat(pos_738197766 || []));
          }
          
          got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars[chckIndx(0, 0, (nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length - 1)].content, vars_738197514, vars_738197514_Idx), NTI33554449);
          if (eqStrings(got_738197783, [116,114,117,101])) {
          var got_738197787 = compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fncontents, vars_738197514, vars_738197514_Idx);
          output_738197761.push.apply(output_738197761, got_738197787);;
          prev_if_statement_738197762 = 0;
          }
          else {
            prev_if_statement_738197762 = 1;
          }
          
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [101,108,115,101])) {
          if (!(((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length == 0))) {
          warn_754974724(([69,108,115,101,32,115,116,97,116,101,109,101,110,116,32,104,97,115,32,97,114,103,117,109,101,110,116,115,46,32,84,104,101,115,101,32,119,105,108,108,32,98,101,32,105,103,110,111,114,101,100,46,32] || []).concat(pos_738197766 || []));
          }
          
          if ((prev_if_statement_738197762 == 2)) {
          fatal_754974722(([69,108,115,101,32,115,116,97,116,101,109,101,110,116,32,110,111,116,32,112,114,101,99,101,101,100,101,100,32,98,121,32,105,102,32,115,116,97,116,101,109,101,110,116,46,32] || []).concat(pos_738197766 || []));
          }
          
          if ((prev_if_statement_738197762 == 1)) {
          got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fncontents, vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, got_738197783);;
          }
          
          prev_if_statement_738197762 = 2;
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [101,108,105,102])) {
          if (!(((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length == 1))) {
          fatal_754974722(([69,108,105,102,32,115,116,97,116,101,109,101,110,116,32,100,111,101,115,110,39,116,32,104,97,118,101,32,49,32,97,114,103,117,109,101,110,116,46,32] || []).concat(pos_738197766 || []));
          }
          
          if ((prev_if_statement_738197762 == 2)) {
          fatal_754974722(([69,108,105,102,32,115,116,97,116,101,109,101,110,116,32,110,111,116,32,112,114,101,99,101,101,100,101,100,32,98,121,32,105,102,32,115,116,97,116,101,109,101,110,116,46,32] || []).concat(pos_738197766 || []));
          }
          
          if ((prev_if_statement_738197762 == 1)) {
          got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars[chckIndx(0, 0, (nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length - 1)].content, vars_738197514, vars_738197514_Idx), NTI33554449);
          if (eqStrings(got_738197783, [116,114,117,101])) {
          got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fncontents, vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, got_738197783);;
          prev_if_statement_738197762 = 0;
          }
          else {
            prev_if_statement_738197762 = 1;
          }
          
          }
          
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [116,101,120,116])) {
          got_738197783 = nimCopy(null, text_738197741(compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fncontents, vars_738197514, vars_738197514_Idx), vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, got_738197783);;
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [101,113,108])) {
          got_738197783 = nimCopy(null, equals_738197637(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)], vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, got_738197783);;
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [115,117,109])) {
          got_738197783 = nimCopy(null, sum_function_738197649(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)], vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, got_738197783);;
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [116,97,98,108,101])) {
          got_738197783 = nimCopy(null, table_738197666(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)], vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, got_738197783);;
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [108,105,115,116])) {
          got_738197783 = nimCopy(null, list_738197721(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)], vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, got_738197783);;
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [102,97,116,97,108])) {
          got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars[chckIndx(0, 0, (nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length - 1)].content, vars_738197514, vars_738197514_Idx), NTI33554449);
          fatal_754974722(got_738197783);
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [97,110,100])) {
          got_738197783 = nimCopy(null, and_function_738197732(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)], vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, got_738197783);;
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [105,115,95,100,101,102,105,110,101,100])) {
          if (!(((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length == 1))) {
          fatal_754974722(([105,108,108,101,103,97,108,32,105,115,95,100,101,102,105,110,101,100,32,115,116,97,116,101,109,101,110,116,59,32,103,111,116,32] || []).concat(HEX24_385875976((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length) || [],[32,97,114,103,117,109,101,110,116,115,32,105,110,115,116,101,97,100,32,111,102,32,49,32] || [],pos_738197766 || []));
          }
          
          got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars[chckIndx(0, 0, (nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length - 1)].content, vars_738197514, vars_738197514_Idx), NTI33554449);
          if (eqStrings(got_738197783, [110,117,108,108])) {
          output_738197761.push.apply(output_738197761, [102,97,108,115,101]);;
          }
          else {
          output_738197761.push.apply(output_738197761, [116,114,117,101]);;
          }
          
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [110,111,116])) {
          if (!(((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length == 1))) {
          fatal_754974722(([105,108,108,101,103,97,108,32,110,111,116,32,115,116,97,116,101,109,101,110,116,59,32,103,111,116,32] || []).concat(HEX24_385875976((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length) || [],[32,97,114,103,117,109,101,110,116,115,32,105,110,115,116,101,97,100,32,111,102,32,49,32] || [],pos_738197766 || []));
          }
          
          got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars[chckIndx(0, 0, (nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length - 1)].content, vars_738197514, vars_738197514_Idx), NTI33554449);
          if (eqStrings(got_738197783, [116,114,117,101])) {
          output_738197761.push.apply(output_738197761, [102,97,108,115,101]);;
          }
          else {
          output_738197761.push.apply(output_738197761, [116,114,117,101]);;
          }
          
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [108,101,110])) {
          if (!(((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length == 1))) {
          fatal_754974722(([105,108,108,101,103,97,108,32,110,111,116,32,115,116,97,116,101,109,101,110,116,59,32,103,111,116,32] || []).concat(HEX24_385875976((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length) || [],[32,97,114,103,117,109,101,110,116,115,32,105,110,115,116,101,97,100,32,111,102,32,49,32] || [],pos_738197766 || []));
          }
          
          got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars[chckIndx(0, 0, (nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length - 1)].content, vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, HEX24_385875976((got_738197783).length));;
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [119,104,105,108,101])) {
          if (!(((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length == 1))) {
          fatal_754974722(([105,108,108,101,103,97,108,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,59,32,103,111,116,32] || []).concat(HEX24_385875976((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length) || [],[32,97,114,103,117,109,101,110,116,115,32,105,110,115,116,101,97,100,32,111,102,32,49] || []));
          }
          
          var iterations_738197835 = 0;
          Label4: {
              Label5: while (true) {
              if (!(iterations_738197835 < 1000000)) break Label5;
                got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars[chckIndx(0, 0, (nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length - 1)].content, vars_738197514, vars_738197514_Idx), NTI33554449);
                if (!(eqStrings(got_738197783, [116,114,117,101]))) {
                break Label4;
                }
                
                got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fncontents, vars_738197514, vars_738197514_Idx), NTI33554449);
                output_738197761.push.apply(output_738197761, got_738197783);;
                iterations_738197835 = addInt(iterations_738197835, 1);
              }
          };
          if ((iterations_738197835 == 1000000)) {
          fatal_754974722(([87,104,105,108,101,32,108,111,111,112,32,101,120,99,101,101,100,101,100,32,109,97,120,105,109,117,109,32,105,116,101,114,97,116,105,111,110,32,110,117,109,98,101,114,58,32,49,48,48,48,48,48,48,32] || []).concat(pos_738197766 || []));
          }
          
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [112,114,105,110,116])) {
          if (!(((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length == 1))) {
          fatal_754974722(([105,108,108,101,103,97,108,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,59,32,103,111,116,32] || []).concat(HEX24_385875976((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length) || [],[32,97,114,103,117,109,101,110,116,115,32,105,110,115,116,101,97,100,32,111,102,32,49,32] || [],pos_738197766 || []));
          }
          
          got_738197783 = nimCopy(null, compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars[chckIndx(0, 0, (nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].fnvars).length - 1)].content, vars_738197514, vars_738197514_Idx), NTI33554449);
          rawEcho(got_738197783);
          }
          else {
          if (eqStrings(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, [111,114])) {
          got_738197783 = nimCopy(null, or_function_738197590(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)], vars_738197514, vars_738197514_Idx), NTI33554449);
          output_738197761.push.apply(output_738197761, got_738197783);;
          }
          else {
            var got_738197846 = exec_function_738197515(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)], vars_738197514[vars_738197514_Idx]);
            output_738197761.push.apply(output_738197761, got_738197846);;
          }
          }}}}}}}}}}}}}}}
          }
          else {
          if ((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].kind == 4)) {
          output_738197761.push.apply(output_738197761, get_var_738197518(vars_738197514, vars_738197514_Idx, nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name));;
          }
          else {
          if ((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].kind == 3)) {
          var got_738197855 = compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].subvalues, vars_738197514, vars_738197514_Idx);
          output_738197761.push.apply(output_738197761, got_738197855);;
          }
          else {
          if ((nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].kind == 5)) {
          if (!(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].is_approx)) {
          var got_738197860 = compile_text_738197512(nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].subvalues, vars_738197514, vars_738197514_Idx);
          add_var_738197534(vars_738197514, vars_738197514_Idx, nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, got_738197860);
          }
          else {
          add_var_738197573(vars_738197514, vars_738197514_Idx, nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].name, nodes_738197513[chckIndx(x_738197760, 0, (nodes_738197513).length - 1)].subvalues);
          }
          
          }
          }}}}}
          x_738197760 = addInt(x_738197760, 1);
        }
    };
    result_738197759 = nimCopy(null, output_738197761, NTI33554449);
    break BeforeRet;
  };

  return result_738197759;

}

function compile_text_js(text_553648137, format_553648138) {
  var result_553648139 = null;

  BeforeRet: {
    var tokens_553648140 = tokenizer_687865912(cstrToNimstr(text_553648137), [104,101,97,100]);
    var parsed_553648141 = parser_721420321(tokens_553648140);
    var default_vars_553648146 = [[{name: [102,111,114,109,97,116], content: cstrToNimstr(format_553648138), approx_content: []}]];
    var executed_553648147 = compile_text_738197512(parsed_553648141, default_vars_553648146, 0);
    result_553648139 = toJSStr(executed_553648147);
    break BeforeRet;
  };

  return result_553648139;

}
